<!DOCTYPE html>
<html lang="ru" data-vue-meta="%7B%22lang%22:%7B%22ssr%22:%22ru%22%7D%7D">
<head >
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
  <meta name="referrer" content="unsafe-url">
  <title>Как построить WaitGroup на основе 32-разрядного целого числа / Хабр</title>
  <style>
    /* cyrillic-ext */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveSxf6TF0.woff2) format('woff2');
      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
    }

    /* cyrillic */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveQhf6TF0.woff2) format('woff2');
      unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
    }

    /* latin-ext */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveSBf6TF0.woff2) format('woff2');
      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
    }

    /* latin */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveRhf6.woff2) format('woff2');
      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    }

    /* non-breaking hyphen */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/l/font?kit=KFOlCnqEu92Fr1MmEU9vBh0_IsHAlmrO6g&skey=ee881451c540fdec&v=v29) format('woff2');
      unicode-range: U+02011;
    }
  </style>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.b6238726.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.2287bfbd.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.8d73f026.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.58744b80.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/js/7298.c8f1d73c.js" as="script">
  <link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.b6238726.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.8d73f026.css">
  <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.99fdff73029c662d76a25e7927355795.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
  
  <script data-vue-meta="ssr" type="application/ld+json" data-vmid="ldjson-schema">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/company\/timeweb\/blog\/712542\/"},"headline":"Как построить WaitGroup на основе 32-разрядного целого числа","datePublished":"2023-01-24T17:01:01+03:00","dateModified":"2023-01-24T17:23:01+03:00","author":{"@type":"Person","name":"Алексей"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"В Go есть приятная утилита для синхронизации, именуемая WaitGroup, которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения...","url":"https:\/\/habr.com\/ru\/company\/timeweb\/blog\/712542\/#post-content-body","about":["c_timeweb","h_programming","h_go","h_linux_dev","h_win_dev","f_develop"],"image":["https:\/\/habr.com\/share\/publication\/712542\/88a2faf146944fa6bdd9fee89b2dc304\/","https:\/\/habrastorage.org\/webt\/rl\/g4\/_k\/rlg4_kbc54vgtxkt0v7vz1gjxj4.png","https:\/\/habrastorage.org\/webt\/p-\/u9\/l2\/p-u9l27ynelxi92bcmdxhu76ma8.png"]}</script>
  <script src="//www.googletagservices.com/tag/js/gpt.js" async></script>
  <style>.grecaptcha-badge{visibility: hidden;}</style>
  <meta name="habr-version" content="2.113.0">
  
  <meta data-vue-meta="ssr" property="fb:app_id" content="444736788986613"><meta data-vue-meta="ssr" property="fb:pages" content="472597926099084"><meta data-vue-meta="ssr" name="twitter:card" content="summary_large_image"><meta data-vue-meta="ssr" name="twitter:site" content="@habr_com"><meta data-vue-meta="ssr" property="og:site_name" content="Хабр" data-vmid="og:site_name"><meta data-vue-meta="ssr" property="og:title" content="Как построить WaitGroup на основе 32-разрядного целого числа" data-vmid="og:title"><meta data-vue-meta="ssr" name="twitter:title" content="Как построить WaitGroup на основе 32-разрядного целого числа" data-vmid="twitter:title"><meta data-vue-meta="ssr" name="aiturec:title" content="Как построить WaitGroup на основе 32-разрядного целого числа" data-vmid="aiturec:title"><meta data-vue-meta="ssr" name="description" content="В Go есть приятная утилита для синхронизации, именуемая WaitGroup , которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения задач. В других языках обычно..." data-vmid="description"><meta data-vue-meta="ssr" itemprop="description" content="В Go есть приятная утилита для синхронизации, именуемая WaitGroup , которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения задач. В других языках обычно..." data-vmid="description:itemprop"><meta data-vue-meta="ssr" property="og:description" content="В Go есть приятная утилита для синхронизации, именуемая WaitGroup , которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения задач. В других языках обычно..." data-vmid="og:description"><meta data-vue-meta="ssr" name="twitter:description" content="В Go есть приятная утилита для синхронизации, именуемая WaitGroup , которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения задач. В других языках обычно..." data-vmid="twitter:description"><meta data-vue-meta="ssr" property="aiturec:description" content="В Go есть приятная утилита для синхронизации, именуемая WaitGroup , которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения задач. В других языках обычно..." data-vmid="aiturec:description"><meta data-vue-meta="ssr" itemprop="image" content="https://habrastorage.org/webt/6c/3p/tz/6c3ptzf6mdfkrusa9krxj1yue90.png" data-vmid="image:itemprop"><meta data-vue-meta="ssr" property="og:image" content="https://habrastorage.org/webt/6c/3p/tz/6c3ptzf6mdfkrusa9krxj1yue90.png" data-vmid="og:image"><meta data-vue-meta="ssr" property="og:image:width" content="1200" data-vmid="og:image:width"><meta data-vue-meta="ssr" property="og:image:height" content="630" data-vmid="og:image:height"><meta data-vue-meta="ssr" property="aiturec:image" content="https://habrastorage.org/webt/6c/3p/tz/6c3ptzf6mdfkrusa9krxj1yue90.png" data-vmid="aiturec:image"><meta data-vue-meta="ssr" name="twitter:image" content="https://habrastorage.org/webt/6c/3p/tz/6c3ptzf6mdfkrusa9krxj1yue90.png" data-vmid="twitter:image"><meta data-vue-meta="ssr" property="vk:image" content="https://habrastorage.org/webt/6c/3p/tz/6c3ptzf6mdfkrusa9krxj1yue90.png?format=vk" data-vmid="vk:image"><meta data-vue-meta="ssr" property="aiturec:item_id" content="712542" data-vmid="aiturec:item_id"><meta data-vue-meta="ssr" property="aiturec:datetime" content="2023-01-24T14:01:01.000Z" data-vmid="aiturec:datetime"><meta data-vue-meta="ssr" content="https://habr.com/ru/company/timeweb/blog/712542/" property="og:url" data-vmid="og:url"><meta data-vue-meta="ssr" property="og:type" content="article" data-vmid="og:type"><meta data-vue-meta="ssr" property="og:locale" content="ru_RU" data-vmid="og:locale"><meta data-vue-meta="ssr" name="keywords" content="timeweb_статьи_перевод, go, утилита, WaitGroup, Windows, Linux, фьютексы, язык программирования, горутины, атомарные алгоритмы">
  <link data-vue-meta="ssr" href="https://habr.com/ru/rss/post/712542/?fl=ru" type="application/rss+xml" title="" rel="alternate" name="rss"><link data-vue-meta="ssr" href="https://habr.com/ru/company/timeweb/blog/712542/" rel="canonical" data-vmid="canonical"><link data-vue-meta="ssr" rel="image_src" href="https://habrastorage.org/webt/6c/3p/tz/6c3ptzf6mdfkrusa9krxj1yue90.png" data-vmid="image:href">
  <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
  <meta name="msapplication-TileColor" content="#629FBC">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="mobile-web-app-capable" content="yes">
  <link
    rel="shortcut icon"
    type="image/png"
    sizes="16x16"
    href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png"
  >
  <link
    rel="shortcut icon"
    type="image/png"
    sizes="32x32"
    href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="76x76"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="120x120"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="152x152"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="180x180"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="256x256"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png"
  >
  <link
    rel="mask-icon"
    color="#77a2b6"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg"
  >
  <link
    crossorigin="use-credentials"
    href="/manifest.webmanifest"
    rel="manifest"
  >
  <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
  <script>window.yaContextCb = window.yaContextCb || []</script>
  <script src="https://yandex.ru/ads/system/context.js" async></script>
</head>
<body>


<div id="app" data-server-rendered="true" data-async-called="true"><div class="tm-layout__wrapper"><!----> <div></div> <!----> <header class="tm-header"><div class="tm-page-width"><div class="tm-header__container"><!----> <span class="tm-header__logo-wrap"><a href="/ru/" class="tm-header__logo tm-header__logo_ru"><svg height="16" width="16" class="tm-svg-img tm-header__icon"><title>Хабр</title> <use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a> <span class="tm-header__beta-sign" style="display:none;">β</span></span> <div class="tm-dropdown tm-header__projects"><div class="tm-dropdown__head"><button class="tm-header__dropdown-toggle"><svg height="16" width="16" class="tm-svg-img tm-header__icon tm-header__icon_dropdown"><title>Открыть список</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#arrow-down"></use></svg></button></div> <!----></div> <a href="/ru/sandbox/start/" class="tm-header__become-author-btn">
            Как стать автором
          </a> <div class="tm-feature tm-header__feature tm-feature tm-feature_variant-inline"><!----></div> <!----> <!----></div></div></header> <div class="tm-layout"><div class="tm-page-progress-bar"></div> <div data-menu-sticky="true" class="tm-base-layout__header tm-base-layout__header_is-sticky"><div class="tm-page-width"><div class="tm-base-layout__header-wrapper"><div class="tm-main-menu"><div class="tm-main-menu__section"><nav class="tm-main-menu__section-content"><!----> <a href="/ru/all/" class="tm-main-menu__item">
        Все потоки
      </a> <a href="/ru/flows/develop/" class="tm-main-menu__item">
          Разработка
        </a><a href="/ru/flows/admin/" class="tm-main-menu__item">
          Администрирование
        </a><a href="/ru/flows/design/" class="tm-main-menu__item">
          Дизайн
        </a><a href="/ru/flows/management/" class="tm-main-menu__item">
          Менеджмент
        </a><a href="/ru/flows/marketing/" class="tm-main-menu__item">
          Маркетинг
        </a><a href="/ru/flows/popsci/" class="tm-main-menu__item">
          Научпоп
        </a></nav></div></div> <div class="tm-header-user-menu tm-base-layout__user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search"><svg height="24" width="24" class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search tm-header-user-menu__icon_dark"><title>Поиск</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#search"></use></svg></a> <!----> <!----> <!----> <div class="tm-header-user-menu__item tm-header-user-menu__user_desktop"><div class="tm-dropdown"><div class="tm-dropdown__head"><svg height="24" width="24" data-test-id="menu-toggle-guest" class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_dark"><title>Профиль</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#header-user"></use></svg> <!----></div> <!----></div> <!----></div> <!----></div></div></div></div> <!----> <div class="tm-page-width"></div> <main class="tm-layout__container"><div hl="ru" companyName="timeweb" data-async-called="true" class="tm-page"><div class="tm-page-width"><div class="tm-page__header"><!----></div> <div class="tm-page__wrapper"><div class="tm-page__main tm-page__main_has-sidebar"><div class="pull-down"><!----> <div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg height="24" width="24" class="tm-svg-img pull-down__arrow"><title>Обновить</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#pull-arrow"></use></svg></div></div> <div class="tm-article-presenter"><div class="tm-company-profile-card tm-company-article__profile-card"><div class="tm-company-card tm-company-profile-card__info"><div class="tm-company-card__header"><a href="/ru/company/timeweb/profile/" class="tm-company-card__avatar"><div class="tm-entity-image"><img alt="" height="48" src="//habrastorage.org/getpro/habr/company/fc0/4f0/3f7/fc04f03f7188eca615ef971283d62dc5.png" width="48" class="tm-entity-image__pic"></div></a> <!----> <div class="tm-counter-container tm-company-card__rating"><div class="tm-counter-container__header"> <div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----> <div class="tm-votes-lever__score tm-votes-lever__score tm-votes-lever__score_appearance-rating"><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter tm-votes-lever__score-counter_rating">
        2152.96
      </span></div> <!----></div></div> <div class="tm-counter-container__footer"><span class="tm-rating__text tm-rating__text">
      Рейтинг
    </span></div></div> <!----></div> <div class="tm-company-card__info"><a href="/ru/company/timeweb/profile/" class="tm-company-card__name">Timeweb Cloud</a> <div class="tm-company-card__description">Облачная платформа для разработчиков и бизнеса</div></div></div> <!----></div> <div class="tm-article-presenter__body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><div class="tm-article-presenter__header"> <div class="tm-article-snippet tm-article-presenter__snippet tm-article-snippet"><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/Shyhartskoi/" title="Shyhartskoi" class="tm-user-info__userpic"><div class="tm-entity-image"><img alt="" height="24" src="//habrastorage.org/r/w32/getpro/habr/avatars/a4c/c9f/bd0/a4cc9fbd0c1ab9b92f5416f4fac7a805.jpg" width="24" class="tm-entity-image__pic"></div></a> <span class="tm-user-info__user"><a href="/ru/users/Shyhartskoi/" class="tm-user-info__username">
      Shyhartskoi
      <!----></a> <span class="tm-article-datetime-published"><time datetime="2023-01-24T14:01:01.000Z" title="2023-01-24, 17:01">24  янв   в 17:01</time></span></span></span></div> <!----></div> <h1 lang="ru" class="tm-article-snippet__title tm-article-snippet__title_h1"><span>Как построить WaitGroup на основе 32-разрядного целого числа</span></h1> <div class="tm-article-snippet__stats"><!----> <div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Время на прочтение</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#clock"></use></svg></span> <span class="tm-article-reading-time__label">
    7 мин
  </span></div> <span class="tm-icon-counter tm-data-icons__item"><svg height="24" width="24" class="tm-svg-img tm-icon-counter__icon"><title>Количество просмотров</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-views"></use></svg> <span class="tm-icon-counter__value">1.8K</span></span></div> <div class="tm-article-snippet__hubs-container"><div class="tm-article-snippet__hubs"><span class="tm-article-snippet__hubs-item"><a href="/ru/company/timeweb/blog/" class="tm-article-snippet__hubs-item-link router-link-active"><span>Блог компании Timeweb Cloud</span> <!----></a></span><span class="tm-article-snippet__hubs-item"><a href="/ru/hub/programming/" class="tm-article-snippet__hubs-item-link"><span>Программирование</span> <span title="Профильный хаб" class="tm-article-snippet__profiled-hub">*</span></a></span><span class="tm-article-snippet__hubs-item"><a href="/ru/hub/go/" class="tm-article-snippet__hubs-item-link"><span>Go</span> <span title="Профильный хаб" class="tm-article-snippet__profiled-hub">*</span></a></span><span class="tm-article-snippet__hubs-item"><a href="/ru/hub/linux_dev/" class="tm-article-snippet__hubs-item-link"><span>Разработка под Linux</span> <span title="Профильный хаб" class="tm-article-snippet__profiled-hub">*</span></a></span><span class="tm-article-snippet__hubs-item"><a href="/ru/hub/win_dev/" class="tm-article-snippet__hubs-item-link"><span>Разработка под Windows</span> <span title="Профильный хаб" class="tm-article-snippet__profiled-hub">*</span></a></span></div></div> <div class="tm-article-snippet__labels-container"><div class="tm-article-snippet__labels"><div class="tm-article-snippet__label tm-article-snippet__label_variant-tutorial"><span>
          Туториал
        </span></div> <div class="tm-article-snippet__label tm-article-snippet__label tm-article-snippet__label_variant-translation"><span>
          Перевод
        </span></div></div></div> <!----> <!----></div></div> <div class="tm-article-presenter__origin"><a href="https://nullprogram.com/blog/2022/10/05/" target="_blank" class="tm-article-presenter__origin-link">
                Автор оригинала:
                <span>
                  Chris Wellons
                </span></a></div> <div data-gallery-root="" lang="ru" class="tm-article-body"><div></div> <div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-1"><div xmlns="http://www.w3.org/1999/xhtml"><img src="https://habrastorage.org/r/w1560/webt/rl/g4/_k/rlg4_kbc54vgtxkt0v7vz1gjxj4.png" alt="image" data-src="https://habrastorage.org/webt/rl/g4/_k/rlg4_kbc54vgtxkt0v7vz1gjxj4.png"/><br/>
<br/>
В Go есть приятная утилита для синхронизации, именуемая <a href="https://godocs.io/sync#WaitGroup">WaitGroup</a>, которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения задач. В других языках обычно действует следующее соглашение по завершению задач: нужно <i>объединять</i> потоки, выполняющие работу. В Go горутины не имеют ни значений, ни дескрипторов, поэтому WaitGroup применяется вместо объединений. Собирание WaitGroup на основе типичных портируемых примитивов – путаное дело, в которое вовлечены конструкторы и деструкторы; также в процессе этой работы приходится управлять временами жизни. Однако, как минимум, под Linux и под Windows, можно построить WaitGroup из целого числа (инициализируемого в значении), во многом как при создании <a href="https://nullprogram.com/blog/2022/05/14/">32-разрядной очереди</a> и <a href="https://nullprogram.com/blog/2022/03/13/">32-разрядного барьера</a>.<a name="habracut"></a><br/>
<br/>
В случае, если вы не знакомы с типичными случаями использования WaitGroup в Go – они таковы:<br/>
<br/>
<pre><code class="go">var wg sync.WaitGroup
for _, task := range tasks {
    wg.Add(1)
    go func(t Task) {
        // ... выполняем задачу ...
        wg.Done()
    }(task)
}
wg.Wait()</code></pre><br/>
Я инициализирую WaitGroup с нулевым значением, и главная горутина увеличивает счётчик на единицу перед началом каждой очередной горутины, решающей задачу. Как только такая горутина справится со своей задачей, она уменьшит счётчик на единицу, а главная горутина при этом будет дожидаться, пока её счётчик не достигнет нуля. Я стремился реализовать тот же самый механизм на C:<br/>
<br/>
<pre><code class="go">void workfunc(task t, int *wg)
{
    // ... выполняем задачу ...
    waitgroup_done(wg);
}


int main(void)
{
    // ...
    int wg = 0;
    for (int i = 0; i &lt; ntasks; i++) {
        waitgroup_add(&amp;wg, 1);
        go(workfunc, tasks[i], &amp;wg);
    }
    waitgroup_wait(&amp;wg);
    // ...
}</code></pre><br/>
Справившись с задачей, WaitGroup возвращается к нулю, и никакая очистка при этом не требуется.<br/>
<br/>
Далее я собираюсь немного развить этот пример. Поскольку значение и контекст WaitGroup указаны явно, можно инициализировать WaitGroup с любым неотрицательным количеством задач! Иными словами, <code>waitgroup_add</code> опционально, если общее количество задач известно заранее.<br/>
<br/>
<pre><code class="go">    int wg = ntasks;
    for (int i = 0; i &lt; ntasks; i++) {
        go(workfunc, tasks[i], &amp;wg);
    }
    waitgroup_wait(&amp;wg);</code></pre><br/>
Если хотите заглянуть в полный код — смотрите: <a href="https://github.com/skeeto/scratch/blob/master/misc/waitgroup.c">waitgroup.c</a><br/>
<br/>
<h2><font color="#1c22be">❯</font> <font color="#454cee">Четыре элемента (синхронизации)</font></h2><br/>
Чтобы построить такую WaitGroup, нам понадобятся четыре примитива на хост-платформе, и каждый из этих примитивов будет оперировать <code>int</code>. Первые два представляют атомарные операции, а вторые два взаимодействуют с системным планировщиком. Чтобы портировать WaitGroup на платформу, необходимо всего лишь реализовать четыре этих функции; как правило, каждая из них укладывается в одну строку.<br/>
<br/>
<pre><code class="go">static int load(int *); // атомарная загрузка
static int addfetch(int *, int); // атомарное сложение с последующей выборкой
static void wait(int *, int); // дожидаться изменения по адресу
static void wake(int *); // разбудить всех ожидающих по адресу</code></pre><br/>
Первые две функции, должно быть, самоочевидны. Функция <code>wait</code> ожидает указателя, направленного на целое число, чтобы изменить его значение, а второй её аргумент – это ожидаемое актуальное значение. Планировщик дважды проверит целое число, прежде, чем отправлять поток спать, на случай, если в последний момент значение изменится. Иными словами, имеем дело с атомарной операцией «проверить-а-потом-возможно-заснуть». Функция <code>wake</code> отвечает за вторую половину работы. Поток, после того, как изменит целое число, при помощи этой функции пробуждает все остальные потоки, ожидавшие изменения того числа, на которое был направлен указатель. В целом весь этот механизм известен под названием <i>фьютекс</i>.<br/>
<br/>
Я собираюсь немного упростить семантику WaitGroup, чтобы моя реализация стала ещё легче. WaitGroup в Go допускает сложение отрицательных чисел, и метод <code>Add</code>, в сущности, выполняет двойную работу. В моей версии сложение отрицательных чисел запрещено. Таким образом, операция “add” – это просто атомарное увеличение на единицу:<br/>
<br/>
<pre><code class="go">void waitgroup_add(int *wg, int delta)
{
    addfetch(wg, delta);
}</code></pre><br/>
Поскольку счётчик здесь невозможно довести до нуля, делать больше ничего не требуется. Но операция “done” <i>может</i> уменьшить счётчик до нуля:<br/>
<br/>
<pre><code class="go">void waitgroup_done(int *wg)
{
    if (!addfetch(wg, -1)) {
        wake(wg);
    }
}</code></pre><br/>
Если при атомарном уменьшении счёт был доведён до нуля, это означает, что мы завершили работу над последней задачей – то есть, необходимо разбудить ожидающих. Мы не знаем, есть ли в самом деле такие ожидающие, но это нормально. В некоторых вариантах применения фьютексов удаётся обойтись без относительно дорогостоящего системного вызова, если ожидающих нет – то есть, не тратить время на системный вызов для каждой разблокировки мьютекса, за который не конкурируют. Но в типичном варианте использования WaitGroup мы <i>рассчитываем</i>, что ждущий найдётся, когда счёт, наконец, дойдёт до нуля. Это распространённый случай.<br/>
<br/>
Самая сложная из трёх операций – ожидание:<br/>
<br/>
<pre><code class="go">void waitgroup_wait(int *wg)
{
    for (;;) {
        int c = load(wg);
        if (!c) {
            break;
        }
    wait(wg, c);
    }
}</code></pre><br/>
Сначала проверяем, не равен ли уже счёт нулю, и если равен – возвращаемся. В противном случае используем фьютекс, чтобы <i>дождаться, пока счёт изменится</i>. К сожалению, мы стремимся получить не совсем такую семантику, а возможность ожидать определённого целевого значения. Ожидания это не нарушает, но потенциально может оказаться неэффективным. Если поток справится с задачей между нашими операциями загрузки и ожидания, мы не отправим его спать, а поручим ему вторую попытку. Но на практике я конкурентно прогонял через эту штуку тысячи потоков и так и не встретил подобного «промаха». Насколько я могу судить, такой случай настолько редок, что его можно не учитывать.<br/>
<br/>
Если бы такой момент действительно нас беспокоил, то WaitGroup можно было бы сделать из пары целых чисел: счётчика и защёлки, которая может быть равна 0 или 1. Ожидающие ждут защёлку, а сама защёлка (атомарно) модифицируется, когда счётчик доходит до нуля или сдвигается с нуля. Таким образом, ожидающие получают стабильное значение, которое можно ждать, и защёлка опосредует счётчик. Но, поскольку на практике это, видимо, значения не имеет, я предпочту элегантность и простоту WaitGroup, состоящей из единственного целого числа.<br/>
<br/>
<h2><font color="#1c22be">❯</font> <font color="#454cee">Четыре элемента: Linux</font></h2><br/>
Когда в общем виде WaitGroup сделана, нам нужно предусмотреть те её части, которые зависят от конкретных платформ. Как GCC, так и Clang поддерживают <a href="https://gcc.gnu.org/onlinedocs/gcc-12.2.0/gcc/_005f_005fatomic-Builtins.html">атомики в стиле GNU</a>, так что я не буду задумываться о компиляторе, а просто предположу, что они доступны под Linux. Первые две функции обёртывают эти встроенные элементы:<br/>
<br/>
<pre><code class="go">static int load(int *p)
{
    return __atomic_load_n(p, __ATOMIC_SEQ_CST);
}


static int addfetch(int *p, int addend)
{
    return __atomic_add_fetch(p, addend, __ATOMIC_SEQ_CST);
}</code></pre><br/>
Для <code>wait</code> и <code>wake</code> нам понадобится <a href="https://man7.org/linux/man-pages/man2/futex.2.html">системный вызов futex(2)</a>. В попытке показать нежелательность их прямого использования, glibc не обёртывает этот системный вызов в функцию, поэтому мы должны выполнить системный вызов сами.<br/>
<br/>
<pre><code class="go">static void wait(int *p, int current)
{
    syscall(SYS_futex, p, FUTEX_WAIT, current, 0, 0, 0);
}


static void wake(int *p)
{
    syscall(SYS_futex, p, FUTEX_WAKE, INT_MAX, 0, 0, 0);
}</code></pre><br/>
<code>INT_MAX</code> означает «разбудить стольких, скольких получится». Другое распространённое значение – 1, соответствует «разбудить единственного ждущего». Кроме того, эти системные вызовы не могут информативно отказать, так что и возвращаемое значение проверять не требуется. Если <code>wait</code> проснётся рано (напр., <code>EINTR</code>), то он всё равно перепроверит счётчик. Фактически, если ваше ядро старше 20 лет, и оно появилось задолго до фьютексов, то оно всё равно вернёт <code>ENOSYS</code> («функция не реализована»). В таком случае функция <i>всё равно</i> будет работать корректно, пусть и крайне неэффективно.<br/>
<br/>
<h2><font color="#1c22be">❯</font> <font color="#454cee">Четыре элемента: Windows</font></h2><br/>
Windows не поддерживала фьютексов вплоть до версии Windows 8, вышедшей в 2012 году. В 2020 году по-прежнему поддерживались версии Windows без фьютексов, поэтому на данной платформе фьютексы до сих пор можно считать относительной новинкой. Тем не менее, они уже достаточно зрелые, чтобы мы могли считать их готовыми к использованию.<br/>
<br/>
Мне хотелось бы, чтобы поддерживались как GCC-шные компиляторы (<a href="https://github.com/skeeto/w64devkit">через Mingw-w64</a>), так и MSVC-шные. Mingw-w64 предоставляет совместимый <code>intrin.h</code>, так что я могу продолжать работать с MSVC-шными атомиками и покрыть оба варианта сразу. С другой стороны, MSVC не требует, чтобы атомики для <code>int</code> (или даже<code> int32_t</code>) были строго <code>long</code>, поэтому я могу подмахнуть здесь небольшое приведение. (напомню: <code>sizeof(long) == sizeof(int)</code> во всех версиях Windows, поддерживающих фьютексы.) Другой вариант – применить с WaitGroup определение <code>typedef</code>, так, чтобы получился <code>int</code> под Linux (для фьютексов) и <code>long</code> под Windows (для атомиков).<br/>
<br/>
<pre><code class="go">static int load(int *p)
{
    return _InterlockedOr((long *)p, 0);
}


static int addfetch(int *p, int addend)
{
    return addend + _InterlockedExchangeAdd((long *)p, addend);
}</code></pre><br/>
Официально разрешённые к использованию фьютексные функции — <a href="https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitonaddress">WaitOnAddress</a> и<a href="https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-wakebyaddressall"> WakeByAddressAll</a>. Они уже <a href="https://sourceforge.net/p/mingw-w64/mailman/mingw-w64-public/thread/CALK-3m%2B6tX_ubMVGV7NarAm6VH0AoOp5THyXfEUA%3DTjyu5L%3Dxw%40mail.gmail.com/">были</a> в <code>kernel32.dll</code>, но на момент написания оригинала этой статьи они живут в <code>API-MS-Win-Core-Synch-l1-2-0.dll</code>, связанные через -lsynchronization. Грязно. Поскольку я этого не перевариваю, вместо них я вызываю низкоуровневые RTL-функции прямо по месту реализации: RtlWaitOnAddress и RtlWakeAddressAll. Они живут прямо по соседству с <code>ntdll.dll</code>, что очень удобно. Насколько мне известно, они не документированы, но, к счастью, нам <a href="https://github.com/wine-mirror/wine/blob/master/dlls/ntdll/sync.c">на помощь приходит Wine</a>, где предоставляется не только документация по ним, но и несколько вариантов реализации. Почитать этот материал познавательно; он подсказывает, как сконструировать фьютексы в тех системах, где они пока отсутствуют.<br/>
<br/>
Эти функции не объявляются ни в каких заголовках, поэтому о них мне пришлось позаботиться самостоятельно. Положительный момент здесь заключается в том, что пока мне удавалось обходиться без существенных издержек на<a href="https://web.archive.org/web/20090912002357/http:/www.tilander.org/aurora/2008/01/include-windowsh.html"> включение windows.h</a>, так что я и дальше могу без него обходиться. Эти функции всё-таки перечислены в библиотеке импорта <code>ntdll.dll</code>, поэтому мне не приходится самому <a href="https://nullprogram.com/blog/2021/05/31/">изобретать записи такой библиотеки</a>.<br/>
<br/>
<pre><code class="go">__declspec(dllimport)
long __stdcall RtlWaitOnAddress(void *, void *, size_t, void *);
__declspec(dllimport)
long __stdcall RtlWakeAddressAll(void *);</code></pre><br/>
<br/>
Достаточно удобно, что эта семантика идеально соответствует семантике фьютексов в Linux!<br/>
<br/>
<pre><code class="go">static void wait(int *p, int current)
{
    RtlWaitOnAddress(p, &amp;current, sizeof(*p), 0);
}


static void wake(int *p)
{
    RtlWakeAddressAll(p);
}</code></pre><br/>
Как и в случае с Linux, информативного отказа тут не добиться, так что возвращаемые значения нас не интересуют.<br/>
<br/>
Вот и вся реализация. Если рассчитывать всего на одну платформу – получается гибкое, легковесное и удобное в использовании средство синхронизации. Как по мне, оно весьма впечатляет, учитывая, что его удалось реализовать примерно в 50 строках относительно простого кода!<br/>
 <br/>
<a href="https://timeweb.cloud//vds-vps?utm_source=habr&amp;utm_medium=banner&amp;utm_campaign=vds-promo-6-rub"><img src="https://habrastorage.org/r/w1560/webt/p-/u9/l2/p-u9l27ynelxi92bcmdxhu76ma8.png" data-src="https://habrastorage.org/webt/p-/u9/l2/p-u9l27ynelxi92bcmdxhu76ma8.png"/></a></div></div></div> <!----> <!----></div> <!----> <!----></div> <!----> <div class="tm-article-presenter__meta"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Btimeweb_%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8_%D0%BF%D0%B5%D1%80%D0%B5%D0%B2%D0%BE%D0%B4%5D" class="tm-tags-list__link">timeweb_статьи_перевод</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bgo%5D" class="tm-tags-list__link">go</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D1%83%D1%82%D0%B8%D0%BB%D0%B8%D1%82%D0%B0%5D" class="tm-tags-list__link">утилита</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5BWaitGroup%5D" class="tm-tags-list__link">WaitGroup</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5BWindows%5D" class="tm-tags-list__link">Windows</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5BLinux%5D" class="tm-tags-list__link">Linux</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D1%84%D1%8C%D1%8E%D1%82%D0%B5%D0%BA%D1%81%D1%8B%5D" class="tm-tags-list__link">фьютексы</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D1%8F%D0%B7%D1%8B%D0%BA%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%5D" class="tm-tags-list__link">язык программирования</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D0%B3%D0%BE%D1%80%D1%83%D1%82%D0%B8%D0%BD%D1%8B%5D" class="tm-tags-list__link">горутины</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D0%B0%D1%82%D0%BE%D0%BC%D0%B0%D1%80%D0%BD%D1%8B%D0%B5%20%D0%B0%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC%D1%8B%5D" class="tm-tags-list__link">атомарные алгоритмы</a></li></ul></div> <div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a href="/ru/company/timeweb/blog/" class="tm-hubs-list__link router-link-active">Блог компании Timeweb Cloud</a></li><li class="tm-separated-list__item"><a href="/ru/hub/programming/" class="tm-hubs-list__link">Программирование</a></li><li class="tm-separated-list__item"><a href="/ru/hub/go/" class="tm-hubs-list__link">Go</a></li><li class="tm-separated-list__item"><a href="/ru/hub/linux_dev/" class="tm-hubs-list__link">Разработка под Linux</a></li><li class="tm-separated-list__item"><a href="/ru/hub/win_dev/" class="tm-hubs-list__link">Разработка под Windows</a></li></ul></div></div></article></div> <!----></div> <div class="tm-article-sticky-panel"><div class="tm-data-icons tm-article-sticky-panel__icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg height="24" width="24" class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article"><title>Всего голосов 13: ↑12 и ↓1</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-rating"></use></svg> <span title="Всего голосов 13: ↑12 и ↓1" class="tm-votes-meter__value tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating">+11</span></div> <DIV class="v-portal" style="display:none;"></DIV></div> <!----> <!----> <button title="Добавить в закладки" type="button" class="bookmarks-button tm-data-icons__item"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Добавить в закладки</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-favorite"></use></svg></span> <span title="Количество пользователей, добавивших публикацию в закладки" class="bookmarks-button__counter">
    12
  </span></button> <div title="Читать комментарии" class="tm-article-comments-counter-link tm-data-icons__item"><a href="/ru/company/timeweb/blog/712542/comments/" class="tm-article-comments-counter-link__link"><svg height="24" width="24" class="tm-svg-img tm-article-comments-counter-link__icon"><title>Комментарии</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-comments"></use></svg> <span class="tm-article-comments-counter-link__value">
      0
    </span></a> <!----></div> <div title="Поделиться" class="tm-sharing tm-data-icons__item"><button type="button" class="tm-sharing__button"><svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button> <DIV class="v-portal" style="display:none;"></DIV></div> <DIV class="v-portal" style="display:none;"></DIV></div> </div></div> <DIV class="v-portal" style="display:none;"></DIV> <div class="tm-article-presenter__footer"><div class="tm-article-blocks"><!----> <div></div> <section class="tm-block tm-block tm-block_spacing-bottom"><!----> <div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><div class="tm-article-author"><div class="tm-article-author__company"><div class="tm-article-author__company-card"><div class="tm-company-snippet"><a href="/ru/company/timeweb/profile/" class="tm-company-snippet__logo-link"><div class="tm-entity-image"><img alt="" height="40" src="//habrastorage.org/getpro/habr/company/fc0/4f0/3f7/fc04f03f7188eca615ef971283d62dc5.png" width="40" class="tm-entity-image__pic"></div></a> <div class="tm-company-snippet__info"><a href="/ru/company/timeweb/profile/" class="tm-company-snippet__title">Timeweb Cloud</a> <div class="tm-company-snippet__description">Облачная платформа для разработчиков и бизнеса</div></div></div> <div class="tm-article-author__buttons"><!----> <!----></div></div> <!----> <div class="tm-article-author__separator"></div></div> <div class="tm-user-card tm-article-author__user-card tm-user-card tm-user-card_variant-article"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/Shyhartskoi/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt="" src="//habrastorage.org/getpro/habr/avatars/a4c/c9f/bd0/a4cc9fbd0c1ab9b92f5416f4fac7a805.jpg" class="tm-entity-image__pic"></div></a> <div class="tm-user-card__meta"><div title=" 315 голосов " class="tm-counter-container tm-karma tm-karma"><div class="tm-counter-container__header"><div class="tm-karma__votes tm-karma__votes_positive">
      147
    </div></div> <div class="tm-counter-container__footer"><div class="tm-karma__text">
      Карма
    </div> <DIV class="v-portal" style="display:none;"></DIV></div></div> <div title="Рейтинг пользователя" class="tm-counter-container"><div class="tm-counter-container__header"> <div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----> <div class="tm-votes-lever__score tm-votes-lever__score tm-votes-lever__score_appearance-rating"><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter tm-votes-lever__score-counter_rating">
        49.6
      </span></div> <!----></div></div> <div class="tm-counter-container__footer"><span class="tm-rating__text tm-rating__text">
      Рейтинг
    </span></div></div></div></div></div> <div class="tm-user-card__info tm-user-card__info tm-user-card__info_variant-article"><div class="tm-user-card__title tm-user-card__title tm-user-card__title_variant-article"><span class="tm-user-card__name tm-user-card__name tm-user-card__name_variant-article">Алексей</span> <a href="/ru/users/Shyhartskoi/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article">
          @Shyhartskoi
        </a> <!----></div> <p class="tm-user-card__short-info tm-user-card__short-info tm-user-card__short-info_variant-article">Люблю котиков</p></div></div> <div class="tm-user-card__buttons tm-user-card__buttons tm-user-card__buttons_variant-article"><!----> <!----> <button type="submit" class="tm-user-card__button btn btn_transparent btn_small">
      Задонатить
    </button> <!----> <!----></div></div> <div class="tm-article-author__user-contacts"><a href="https://telegram.me/Shyhartskoi" rel="noopener" target="_blank" class="tm-article-author__contact">
      Telegram
    </a></div></div> <DIV class="v-portal" style="display:none;"></DIV></div> <!----></section> <!----> <div class="tm-article-blocks__comments"><div class="tm-article-page-comments"><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/company/timeweb/blog/712542/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style"><svg height="24" width="24" class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted"><title>Комментарии</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-comments"></use></svg> <span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted">
       Комментировать 
    </span></a> <!----></div></div></div>  <section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2> </div> <!----></header> <div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><div class="tm-tabs tm-tabs"><div><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim">
        Лучшие за сутки
      </button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link tm-tabs__tab-link_slim">
        Похожие
      </button></span></div> <!----></div> <div class="similar-and-daily__tab-view"><div><!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <div class="tm-placeholder-article-cards"><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div></div> <!----> <!----> <!----> <!----></div> <!----></div></div> <!----></section> <div><!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <div class="tm-placeholder-inset tm-placeholder-vacancies"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div> <div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li></ul></div> <div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div> <!----> <!----> <!----> <!----> <!----> <!----></div> <!----> </div></div></div></div></div> <div class="tm-page__sidebar"><div class="tm-layout-sidebar"><div class="tm-layout-sidebar__placeholder_initial"></div> <div class="tm-sexy-sidebar tm-sexy-sidebar_initial" style="margin-top:0px;"><!----> <section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Информация</h2> </div> <!----></header> <div class="tm-block__body tm-block__body"><div class="tm-company-basic-info"><dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title tm-description-list__title_variant-columns-nowrap">Сайт</dt> <dd class="tm-description-list__body tm-description-list__body tm-description-list__body_variant-columns-nowrap"><a href="https://timeweb.cloud/" target="_blank" class="tm-company-basic-info__link">
      timeweb.cloud
    </a></dd></dl> <dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title tm-description-list__title_variant-columns-nowrap">Дата регистрации</dt> <dd class="tm-description-list__body tm-description-list__body tm-description-list__body_variant-columns-nowrap"><time datetime="2011-08-11T14:17:04.000Z" title="2011-08-11, 18:17">11  августа  2011</time></dd></dl> <dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title tm-description-list__title_variant-columns-nowrap">Дата основания</dt> <dd class="tm-description-list__body tm-description-list__body tm-description-list__body_variant-columns-nowrap"><time datetime="2006-05-24T20:00:00.000Z" title="2006-05-25, 00:00">25  мая  2006</time></dd></dl> <dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title tm-description-list__title_variant-columns-nowrap">Численность</dt> <dd class="tm-description-list__body tm-description-list__body tm-description-list__body_variant-columns-nowrap">
    201–500 человек
  </dd></dl> <dl class="tm-description-list tm-description-list tm-description-list_variant-columns-nowrap"><dt class="tm-description-list__title tm-description-list__title tm-description-list__title_variant-columns-nowrap">Местоположение</dt> <dd class="tm-description-list__body tm-description-list__body tm-description-list__body_variant-columns-nowrap">
    Россия
  </dd></dl> <!----></div></div> <!----></section> <div class="tm-company-widgets"></div> <!----> <!----> <!----></div></div></div></div></div></div></main> <!----></div> <div class="tm-footer-menu"><div class="tm-page-width"><div class="tm-footer-menu__container"><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Ваш аккаунт
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr/?back=/ru/company/timeweb/blog/712542/&amp;hl=ru" rel="nofollow" target="_self">
                Войти
              </a></li><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr-register/?back=/ru/company/timeweb/blog/712542/&amp;hl=ru" rel="nofollow" target="_self">
                Регистрация
              </a></li></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Разделы
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/ru/" class="footer-menu__item-link router-link-active">
                Публикации
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/news/" class="footer-menu__item-link">
                Новости
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/hubs/" class="footer-menu__item-link">
                Хабы
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/companies/" class="footer-menu__item-link">
                Компании
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/users/" class="footer-menu__item-link">
                Авторы
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/sandbox/" class="footer-menu__item-link">
                Песочница
              </a></li></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Информация
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/ru/docs/help/" class="footer-menu__item-link">
                Устройство сайта
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/docs/authors/codex/" class="footer-menu__item-link">
                Для авторов
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/docs/companies/corpblogs/" class="footer-menu__item-link">
                Для компаний
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/docs/docs/transparency/" class="footer-menu__item-link">
                Документы
              </a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/agreement" target="_blank">
                Соглашение
              </a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/confidential/" target="_blank">
                Конфиденциальность
              </a></li></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Услуги
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/corporate-blogs/" target="_blank">
                Корпоративный блог
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/advertising/" target="_blank">
                Медийная реклама
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/native-special/" target="_blank">
                Нативные проекты
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/education-programs/" target="_blank">
                Образовательные программы
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/hello-startup/" target="_blank">
                Стартапам
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/megaprojects/" class="footer-menu__item-link">
                Мегапроекты
              </a></li></ul></div></div></div></div></div> <div class="tm-footer"><div class="tm-page-width"><div class="tm-footer__container"><!----> <div class="tm-footer__social"><a href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Facebook</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Twitter</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>VK</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-vkontakte"></use></svg></a><a href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Telegram</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Youtube</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a href="https://zen.yandex.ru/habr" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Яндекс Дзен</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-zen"></use></svg></a></div> <DIV class="v-portal" style="display:none;"></DIV> <button class="tm-footer__link"><!---->
        Настройка языка
      </button> <a href="/ru/feedback/" class="tm-footer__link">
        Техническая поддержка
      </a> <a href="/berserk-mode-nope" class="tm-footer__link">
        Вернуться на старую версию
      </a> <div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2023, </span> <span class="tm-copyright__name"><a href="https://company.habr.com/" rel="noopener" target="_blank" class="tm-copyright__link">Habr</a></span></span></div></div></div></div> <!----> <!----></div> <div class="vue-portal-target"></div></div>
<script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"712542":{"id":"712542","timePublished":"2023-01-24T14:01:01+00:00","isCorporative":true,"lang":"ru","titleHtml":"Как построить WaitGroup на основе 32-разрядного целого числа","leadData":{"textHtml":"\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fwebt\u002Frl\u002Fg4\u002F_k\u002Frlg4_kbc54vgtxkt0v7vz1gjxj4.png\" alt=\"image\"\u003E\u003Cbr\u003E\r\n\u003Cbr\u003E\r\nВ Go есть приятная утилита для синхронизации, именуемая \u003Ca href=\"https:\u002F\u002Fgodocs.io\u002Fsync#WaitGroup\" rel=\"nofollow noopener noreferrer\"\u003EWaitGroup\u003C\u002Fa\u003E, которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения задач. В других языках обычно действует следующее соглашение по завершению задач: нужно \u003Ci\u003Eобъединять\u003C\u002Fi\u003E потоки, выполняющие работу. В Go горутины не имеют ни значений, ни дескрипторов, поэтому WaitGroup применяется вместо объединений. Собирание WaitGroup на основе типичных портируемых примитивов – путаное дело, в которое вовлечены конструкторы и деструкторы; также в процессе этой работы приходится управлять временами жизни. Однако, как минимум, под Linux и под Windows, можно построить WaitGroup из целого числа (инициализируемого в значении), во многом как при создании \u003Ca href=\"https:\u002F\u002Fnullprogram.com\u002Fblog\u002F2022\u002F05\u002F14\u002F\" rel=\"nofollow noopener noreferrer\"\u003E32-разрядной очереди\u003C\u002Fa\u003E и \u003Ca href=\"https:\u002F\u002Fnullprogram.com\u002Fblog\u002F2022\u002F03\u002F13\u002F\" rel=\"nofollow noopener noreferrer\"\u003E32-разрядного барьера\u003C\u002Fa\u003E.","imageUrl":null,"buttonTextHtml":"Читать дальше &rarr;","image":null},"editorVersion":"1.0","postType":"article","postLabels":[{"type":"translation","data":{"originalAuthorName":"Chris Wellons","originalUrl":"https:\u002F\u002Fnullprogram.com\u002Fblog\u002F2022\u002F10\u002F05\u002F"}}],"author":{"id":"2666479","alias":"Shyhartskoi","fullname":"Алексей","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002Fa4c\u002Fc9f\u002Fbd0\u002Fa4cc9fbd0c1ab9b92f5416f4fac7a805.jpg","speciality":"Люблю котиков","scoreStats":{"score":147,"votesCount":315},"rating":49.6,"relatedData":null,"contacts":[{"title":"Telegram","url":"https:\u002F\u002Ftelegram.me\u002FShyhartskoi","value":"Shyhartskoi","siteTitle":null,"favicon":null}],"authorContacts":[{"title":"Telegram","url":"https:\u002F\u002Ftelegram.me\u002FShyhartskoi","value":"Shyhartskoi","siteTitle":null,"favicon":null}],"paymentDetails":{"paymentYandexMoney":"5106218035412774","paymentPayPalMe":null,"paymentWebmoney":"621422957688"}},"statistics":{"commentsCount":0,"favoritesCount":12,"readingCount":1813,"score":11,"votesCount":13,"votesCountPlus":12,"votesCountMinus":1},"hubs":[{"id":"17357","alias":"timeweb","type":"corporative","title":"Блог компании Timeweb Cloud","titleHtml":"Блог компании Timeweb Cloud","isProfiled":false,"relatedData":null},{"id":"359","alias":"programming","type":"collective","title":"Программирование","titleHtml":"Программирование","isProfiled":true,"relatedData":null},{"id":"17748","alias":"go","type":"collective","title":"Go","titleHtml":"Go","isProfiled":true,"relatedData":null},{"id":"19727","alias":"linux_dev","type":"collective","title":"Разработка под Linux","titleHtml":"Разработка под Linux","isProfiled":true,"relatedData":null},{"id":"21456","alias":"win_dev","type":"collective","title":"Разработка под Windows","titleHtml":"Разработка под Windows","isProfiled":true,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"}],"relatedData":null,"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fwebt\u002Frl\u002Fg4\u002F_k\u002Frlg4_kbc54vgtxkt0v7vz1gjxj4.png\" alt=\"image\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fwebt\u002Frl\u002Fg4\u002F_k\u002Frlg4_kbc54vgtxkt0v7vz1gjxj4.png\"\u002F\u003E\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nВ Go есть приятная утилита для синхронизации, именуемая \u003Ca href=\"https:\u002F\u002Fgodocs.io\u002Fsync#WaitGroup\"\u003EWaitGroup\u003C\u002Fa\u003E, которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения задач. В других языках обычно действует следующее соглашение по завершению задач: нужно \u003Ci\u003Eобъединять\u003C\u002Fi\u003E потоки, выполняющие работу. В Go горутины не имеют ни значений, ни дескрипторов, поэтому WaitGroup применяется вместо объединений. Собирание WaitGroup на основе типичных портируемых примитивов – путаное дело, в которое вовлечены конструкторы и деструкторы; также в процессе этой работы приходится управлять временами жизни. Однако, как минимум, под Linux и под Windows, можно построить WaitGroup из целого числа (инициализируемого в значении), во многом как при создании \u003Ca href=\"https:\u002F\u002Fnullprogram.com\u002Fblog\u002F2022\u002F05\u002F14\u002F\"\u003E32-разрядной очереди\u003C\u002Fa\u003E и \u003Ca href=\"https:\u002F\u002Fnullprogram.com\u002Fblog\u002F2022\u002F03\u002F13\u002F\"\u003E32-разрядного барьера\u003C\u002Fa\u003E.\u003Ca name=\"habracut\"\u003E\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nВ случае, если вы не знакомы с типичными случаями использования WaitGroup в Go – они таковы:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Evar wg sync.WaitGroup\nfor _, task := range tasks {\n    wg.Add(1)\n    go func(t Task) {\n        \u002F\u002F ... выполняем задачу ...\n        wg.Done()\n    }(task)\n}\nwg.Wait()\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nЯ инициализирую WaitGroup с нулевым значением, и главная горутина увеличивает счётчик на единицу перед началом каждой очередной горутины, решающей задачу. Как только такая горутина справится со своей задачей, она уменьшит счётчик на единицу, а главная горутина при этом будет дожидаться, пока её счётчик не достигнет нуля. Я стремился реализовать тот же самый механизм на C:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Evoid workfunc(task t, int *wg)\n{\n    \u002F\u002F ... выполняем задачу ...\n    waitgroup_done(wg);\n}\n\n\nint main(void)\n{\n    \u002F\u002F ...\n    int wg = 0;\n    for (int i = 0; i &lt; ntasks; i++) {\n        waitgroup_add(&amp;wg, 1);\n        go(workfunc, tasks[i], &amp;wg);\n    }\n    waitgroup_wait(&amp;wg);\n    \u002F\u002F ...\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nСправившись с задачей, WaitGroup возвращается к нулю, и никакая очистка при этом не требуется.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nДалее я собираюсь немного развить этот пример. Поскольку значение и контекст WaitGroup указаны явно, можно инициализировать WaitGroup с любым неотрицательным количеством задач! Иными словами, \u003Ccode\u003Ewaitgroup_add\u003C\u002Fcode\u003E опционально, если общее количество задач известно заранее.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003E    int wg = ntasks;\n    for (int i = 0; i &lt; ntasks; i++) {\n        go(workfunc, tasks[i], &amp;wg);\n    }\n    waitgroup_wait(&amp;wg);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nЕсли хотите заглянуть в полный код — смотрите: \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fskeeto\u002Fscratch\u002Fblob\u002Fmaster\u002Fmisc\u002Fwaitgroup.c\"\u003Ewaitgroup.c\u003C\u002Fa\u003E\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch2\u003E\u003Cfont color=\"#1c22be\"\u003E❯\u003C\u002Ffont\u003E \u003Cfont color=\"#454cee\"\u003EЧетыре элемента (синхронизации)\u003C\u002Ffont\u003E\u003C\u002Fh2\u003E\u003Cbr\u002F\u003E\r\nЧтобы построить такую WaitGroup, нам понадобятся четыре примитива на хост-платформе, и каждый из этих примитивов будет оперировать \u003Ccode\u003Eint\u003C\u002Fcode\u003E. Первые два представляют атомарные операции, а вторые два взаимодействуют с системным планировщиком. Чтобы портировать WaitGroup на платформу, необходимо всего лишь реализовать четыре этих функции; как правило, каждая из них укладывается в одну строку.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Estatic int load(int *); \u002F\u002F атомарная загрузка\nstatic int addfetch(int *, int); \u002F\u002F атомарное сложение с последующей выборкой\nstatic void wait(int *, int); \u002F\u002F дожидаться изменения по адресу\nstatic void wake(int *); \u002F\u002F разбудить всех ожидающих по адресу\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nПервые две функции, должно быть, самоочевидны. Функция \u003Ccode\u003Ewait\u003C\u002Fcode\u003E ожидает указателя, направленного на целое число, чтобы изменить его значение, а второй её аргумент – это ожидаемое актуальное значение. Планировщик дважды проверит целое число, прежде, чем отправлять поток спать, на случай, если в последний момент значение изменится. Иными словами, имеем дело с атомарной операцией «проверить-а-потом-возможно-заснуть». Функция \u003Ccode\u003Ewake\u003C\u002Fcode\u003E отвечает за вторую половину работы. Поток, после того, как изменит целое число, при помощи этой функции пробуждает все остальные потоки, ожидавшие изменения того числа, на которое был направлен указатель. В целом весь этот механизм известен под названием \u003Ci\u003Eфьютекс\u003C\u002Fi\u003E.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nЯ собираюсь немного упростить семантику WaitGroup, чтобы моя реализация стала ещё легче. WaitGroup в Go допускает сложение отрицательных чисел, и метод \u003Ccode\u003EAdd\u003C\u002Fcode\u003E, в сущности, выполняет двойную работу. В моей версии сложение отрицательных чисел запрещено. Таким образом, операция “add” – это просто атомарное увеличение на единицу:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Evoid waitgroup_add(int *wg, int delta)\n{\n    addfetch(wg, delta);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nПоскольку счётчик здесь невозможно довести до нуля, делать больше ничего не требуется. Но операция “done” \u003Ci\u003Eможет\u003C\u002Fi\u003E уменьшить счётчик до нуля:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Evoid waitgroup_done(int *wg)\n{\n    if (!addfetch(wg, -1)) {\n        wake(wg);\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nЕсли при атомарном уменьшении счёт был доведён до нуля, это означает, что мы завершили работу над последней задачей – то есть, необходимо разбудить ожидающих. Мы не знаем, есть ли в самом деле такие ожидающие, но это нормально. В некоторых вариантах применения фьютексов удаётся обойтись без относительно дорогостоящего системного вызова, если ожидающих нет – то есть, не тратить время на системный вызов для каждой разблокировки мьютекса, за который не конкурируют. Но в типичном варианте использования WaitGroup мы \u003Ci\u003Eрассчитываем\u003C\u002Fi\u003E, что ждущий найдётся, когда счёт, наконец, дойдёт до нуля. Это распространённый случай.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nСамая сложная из трёх операций – ожидание:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Evoid waitgroup_wait(int *wg)\n{\n    for (;;) {\n        int c = load(wg);\n        if (!c) {\n            break;\n        }\n    wait(wg, c);\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nСначала проверяем, не равен ли уже счёт нулю, и если равен – возвращаемся. В противном случае используем фьютекс, чтобы \u003Ci\u003Eдождаться, пока счёт изменится\u003C\u002Fi\u003E. К сожалению, мы стремимся получить не совсем такую семантику, а возможность ожидать определённого целевого значения. Ожидания это не нарушает, но потенциально может оказаться неэффективным. Если поток справится с задачей между нашими операциями загрузки и ожидания, мы не отправим его спать, а поручим ему вторую попытку. Но на практике я конкурентно прогонял через эту штуку тысячи потоков и так и не встретил подобного «промаха». Насколько я могу судить, такой случай настолько редок, что его можно не учитывать.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nЕсли бы такой момент действительно нас беспокоил, то WaitGroup можно было бы сделать из пары целых чисел: счётчика и защёлки, которая может быть равна 0 или 1. Ожидающие ждут защёлку, а сама защёлка (атомарно) модифицируется, когда счётчик доходит до нуля или сдвигается с нуля. Таким образом, ожидающие получают стабильное значение, которое можно ждать, и защёлка опосредует счётчик. Но, поскольку на практике это, видимо, значения не имеет, я предпочту элегантность и простоту WaitGroup, состоящей из единственного целого числа.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch2\u003E\u003Cfont color=\"#1c22be\"\u003E❯\u003C\u002Ffont\u003E \u003Cfont color=\"#454cee\"\u003EЧетыре элемента: Linux\u003C\u002Ffont\u003E\u003C\u002Fh2\u003E\u003Cbr\u002F\u003E\r\nКогда в общем виде WaitGroup сделана, нам нужно предусмотреть те её части, которые зависят от конкретных платформ. Как GCC, так и Clang поддерживают \u003Ca href=\"https:\u002F\u002Fgcc.gnu.org\u002Fonlinedocs\u002Fgcc-12.2.0\u002Fgcc\u002F_005f_005fatomic-Builtins.html\"\u003Eатомики в стиле GNU\u003C\u002Fa\u003E, так что я не буду задумываться о компиляторе, а просто предположу, что они доступны под Linux. Первые две функции обёртывают эти встроенные элементы:\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Estatic int load(int *p)\n{\n    return __atomic_load_n(p, __ATOMIC_SEQ_CST);\n}\n\n\nstatic int addfetch(int *p, int addend)\n{\n    return __atomic_add_fetch(p, addend, __ATOMIC_SEQ_CST);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nДля \u003Ccode\u003Ewait\u003C\u002Fcode\u003E и \u003Ccode\u003Ewake\u003C\u002Fcode\u003E нам понадобится \u003Ca href=\"https:\u002F\u002Fman7.org\u002Flinux\u002Fman-pages\u002Fman2\u002Ffutex.2.html\"\u003Eсистемный вызов futex(2)\u003C\u002Fa\u003E. В попытке показать нежелательность их прямого использования, glibc не обёртывает этот системный вызов в функцию, поэтому мы должны выполнить системный вызов сами.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Estatic void wait(int *p, int current)\n{\n    syscall(SYS_futex, p, FUTEX_WAIT, current, 0, 0, 0);\n}\n\n\nstatic void wake(int *p)\n{\n    syscall(SYS_futex, p, FUTEX_WAKE, INT_MAX, 0, 0, 0);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\n\u003Ccode\u003EINT_MAX\u003C\u002Fcode\u003E означает «разбудить стольких, скольких получится». Другое распространённое значение – 1, соответствует «разбудить единственного ждущего». Кроме того, эти системные вызовы не могут информативно отказать, так что и возвращаемое значение проверять не требуется. Если \u003Ccode\u003Ewait\u003C\u002Fcode\u003E проснётся рано (напр., \u003Ccode\u003EEINTR\u003C\u002Fcode\u003E), то он всё равно перепроверит счётчик. Фактически, если ваше ядро старше 20 лет, и оно появилось задолго до фьютексов, то оно всё равно вернёт \u003Ccode\u003EENOSYS\u003C\u002Fcode\u003E («функция не реализована»). В таком случае функция \u003Ci\u003Eвсё равно\u003C\u002Fi\u003E будет работать корректно, пусть и крайне неэффективно.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Ch2\u003E\u003Cfont color=\"#1c22be\"\u003E❯\u003C\u002Ffont\u003E \u003Cfont color=\"#454cee\"\u003EЧетыре элемента: Windows\u003C\u002Ffont\u003E\u003C\u002Fh2\u003E\u003Cbr\u002F\u003E\r\nWindows не поддерживала фьютексов вплоть до версии Windows 8, вышедшей в 2012 году. В 2020 году по-прежнему поддерживались версии Windows без фьютексов, поэтому на данной платформе фьютексы до сих пор можно считать относительной новинкой. Тем не менее, они уже достаточно зрелые, чтобы мы могли считать их готовыми к использованию.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nМне хотелось бы, чтобы поддерживались как GCC-шные компиляторы (\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fskeeto\u002Fw64devkit\"\u003Eчерез Mingw-w64\u003C\u002Fa\u003E), так и MSVC-шные. Mingw-w64 предоставляет совместимый \u003Ccode\u003Eintrin.h\u003C\u002Fcode\u003E, так что я могу продолжать работать с MSVC-шными атомиками и покрыть оба варианта сразу. С другой стороны, MSVC не требует, чтобы атомики для \u003Ccode\u003Eint\u003C\u002Fcode\u003E (или даже\u003Ccode\u003E int32_t\u003C\u002Fcode\u003E) были строго \u003Ccode\u003Elong\u003C\u002Fcode\u003E, поэтому я могу подмахнуть здесь небольшое приведение. (напомню: \u003Ccode\u003Esizeof(long) == sizeof(int)\u003C\u002Fcode\u003E во всех версиях Windows, поддерживающих фьютексы.) Другой вариант – применить с WaitGroup определение \u003Ccode\u003Etypedef\u003C\u002Fcode\u003E, так, чтобы получился \u003Ccode\u003Eint\u003C\u002Fcode\u003E под Linux (для фьютексов) и \u003Ccode\u003Elong\u003C\u002Fcode\u003E под Windows (для атомиков).\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Estatic int load(int *p)\n{\n    return _InterlockedOr((long *)p, 0);\n}\n\n\nstatic int addfetch(int *p, int addend)\n{\n    return addend + _InterlockedExchangeAdd((long *)p, addend);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nОфициально разрешённые к использованию фьютексные функции — \u003Ca href=\"https:\u002F\u002Flearn.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fapi\u002Fsynchapi\u002Fnf-synchapi-waitonaddress\"\u003EWaitOnAddress\u003C\u002Fa\u003E и\u003Ca href=\"https:\u002F\u002Flearn.microsoft.com\u002Fen-us\u002Fwindows\u002Fwin32\u002Fapi\u002Fsynchapi\u002Fnf-synchapi-wakebyaddressall\"\u003E WakeByAddressAll\u003C\u002Fa\u003E. Они уже \u003Ca href=\"https:\u002F\u002Fsourceforge.net\u002Fp\u002Fmingw-w64\u002Fmailman\u002Fmingw-w64-public\u002Fthread\u002FCALK-3m%2B6tX_ubMVGV7NarAm6VH0AoOp5THyXfEUA%3DTjyu5L%3Dxw%40mail.gmail.com\u002F\"\u003Eбыли\u003C\u002Fa\u003E в \u003Ccode\u003Ekernel32.dll\u003C\u002Fcode\u003E, но на момент написания оригинала этой статьи они живут в \u003Ccode\u003EAPI-MS-Win-Core-Synch-l1-2-0.dll\u003C\u002Fcode\u003E, связанные через -lsynchronization. Грязно. Поскольку я этого не перевариваю, вместо них я вызываю низкоуровневые RTL-функции прямо по месту реализации: RtlWaitOnAddress и RtlWakeAddressAll. Они живут прямо по соседству с \u003Ccode\u003Entdll.dll\u003C\u002Fcode\u003E, что очень удобно. Насколько мне известно, они не документированы, но, к счастью, нам \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fwine-mirror\u002Fwine\u002Fblob\u002Fmaster\u002Fdlls\u002Fntdll\u002Fsync.c\"\u003Eна помощь приходит Wine\u003C\u002Fa\u003E, где предоставляется не только документация по ним, но и несколько вариантов реализации. Почитать этот материал познавательно; он подсказывает, как сконструировать фьютексы в тех системах, где они пока отсутствуют.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nЭти функции не объявляются ни в каких заголовках, поэтому о них мне пришлось позаботиться самостоятельно. Положительный момент здесь заключается в том, что пока мне удавалось обходиться без существенных издержек на\u003Ca href=\"https:\u002F\u002Fweb.archive.org\u002Fweb\u002F20090912002357\u002Fhttp:\u002Fwww.tilander.org\u002Faurora\u002F2008\u002F01\u002Finclude-windowsh.html\"\u003E включение windows.h\u003C\u002Fa\u003E, так что я и дальше могу без него обходиться. Эти функции всё-таки перечислены в библиотеке импорта \u003Ccode\u003Entdll.dll\u003C\u002Fcode\u003E, поэтому мне не приходится самому \u003Ca href=\"https:\u002F\u002Fnullprogram.com\u002Fblog\u002F2021\u002F05\u002F31\u002F\"\u003Eизобретать записи такой библиотеки\u003C\u002Fa\u003E.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003E__declspec(dllimport)\nlong __stdcall RtlWaitOnAddress(void *, void *, size_t, void *);\n__declspec(dllimport)\nlong __stdcall RtlWakeAddressAll(void *);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nДостаточно удобно, что эта семантика идеально соответствует семантике фьютексов в Linux!\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\n\u003Cpre\u003E\u003Ccode class=\"go\"\u003Estatic void wait(int *p, int current)\n{\n    RtlWaitOnAddress(p, &amp;current, sizeof(*p), 0);\n}\n\n\nstatic void wake(int *p)\n{\n    RtlWakeAddressAll(p);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cbr\u002F\u003E\r\nКак и в случае с Linux, информативного отказа тут не добиться, так что возвращаемые значения нас не интересуют.\u003Cbr\u002F\u003E\r\n\u003Cbr\u002F\u003E\r\nВот и вся реализация. Если рассчитывать всего на одну платформу – получается гибкое, легковесное и удобное в использовании средство синхронизации. Как по мне, оно весьма впечатляет, учитывая, что его удалось реализовать примерно в 50 строках относительно простого кода!\u003Cbr\u002F\u003E\r\n \u003Cbr\u002F\u003E\r\n\u003Ca href=\"https:\u002F\u002Ftimeweb.cloud\u002F\u002Fvds-vps?utm_source=habr&amp;utm_medium=banner&amp;utm_campaign=vds-promo-6-rub\"\u003E\u003Cimg src=\"https:\u002F\u002Fhabrastorage.org\u002Fr\u002Fw1560\u002Fwebt\u002Fp-\u002Fu9\u002Fl2\u002Fp-u9l27ynelxi92bcmdxhu76ma8.png\" data-src=\"https:\u002F\u002Fhabrastorage.org\u002Fwebt\u002Fp-\u002Fu9\u002Fl2\u002Fp-u9l27ynelxi92bcmdxhu76ma8.png\"\u002F\u003E\u003C\u002Fa\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"timeweb_статьи_перевод"},{"titleHtml":"go"},{"titleHtml":"утилита"},{"titleHtml":"WaitGroup"},{"titleHtml":"Windows"},{"titleHtml":"Linux"},{"titleHtml":"фьютексы"},{"titleHtml":"язык программирования"},{"titleHtml":"горутины"},{"titleHtml":"атомарные алгоритмы"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fwebt\u002F6c\u002F3p\u002Ftz\u002F6c3ptzf6mdfkrusa9krxj1yue90.png","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabrastorage.org\u002Fwebt\u002F6c\u002F3p\u002Ftz\u002F6c3ptzf6mdfkrusa9krxj1yue90.png","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompany\\\u002Ftimeweb\\\u002Fblog\\\u002F712542\\\u002F\"},\"headline\":\"Как построить WaitGroup на основе 32-разрядного целого числа\",\"datePublished\":\"2023-01-24T17:01:01+03:00\",\"dateModified\":\"2023-01-24T17:23:01+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"Алексей\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"В Go есть приятная утилита для синхронизации, именуемая WaitGroup, которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fcompany\\\u002Ftimeweb\\\u002Fblog\\\u002F712542\\\u002F#post-content-body\",\"about\":[\"c_timeweb\",\"h_programming\",\"h_go\",\"h_linux_dev\",\"h_win_dev\",\"f_develop\"],\"image\":[\"https:\\\u002F\\\u002Fhabr.com\\\u002Fshare\\\u002Fpublication\\\u002F712542\\\u002F88a2faf146944fa6bdd9fee89b2dc304\\\u002F\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Frl\\\u002Fg4\\\u002F_k\\\u002Frlg4_kbc54vgtxkt0v7vz1gjxj4.png\",\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fp-\\\u002Fu9\\\u002Fl2\\\u002Fp-u9l27ynelxi92bcmdxhu76ma8.png\"]}","metaDescription":"В Go есть приятная утилита для синхронизации, именуемая WaitGroup , которую могут ожидать одна или несколько горутин. Это требуется для конкурентного завершения задач. В других языках обычно...","mainImageUrl":null,"amp":false,"customTrackerLinks":[]},"polls":[],"commentsEnabled":true,"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":"tutorial","readingTime":7,"complexity":null,"isEditorial":false}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"view":"cards","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[],"hubs":""},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":""}},"companies":{"companyRefs":{"timeweb":{"alias":"timeweb","imageUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fcompany\u002Ffc0\u002F4f0\u002F3f7\u002Ffc04f03f7188eca615ef971283d62dc5.png","titleHtml":"Timeweb Cloud","descriptionHtml":"Облачная платформа для разработчиков и бизнеса","relatedData":null,"statistics":{"subscribersCount":1115,"rating":2152.96,"invest":null,"postsCount":807,"newsCount":40,"vacanciesCount":3,"employeesCount":34,"careerRating":null},"foundationDate":{"year":"2006","month":"05","day":"25"},"location":{"city":{"id":"447733","title":"Санкт-Петербург"},"region":{"id":"1948","title":"Санкт-Петербург и область"},"country":{"id":"168","title":"Россия"}},"siteUrl":"https:\u002F\u002Ftimeweb.cloud\u002F","staffNumber":"201–500 человек","registrationDate":"2011-08-11T14:17:04+00:00","representativeUser":null,"contacts":[],"settings":{"analyticsSettings":[{"type":"ga","trackingId":"UA-52903813-5"}],"branding":null,"status":"active","isStartup":false},"metadata":{"titleHtml":"Timeweb Cloud, Санкт-Петербург - Облачная платформа для разработчиков и бизнеса с 25 мая 2006 г.","title":"Timeweb Cloud, Санкт-Петербург - Облачная платформа для разработчиков и бизнеса с 25 мая 2006 г.","keywords":["Читальный зал","Научно-популярное","JavaScript","История IT","DIY или Сделай сам","javascript","timeweb_статьи","timeweb","программирование","timeweb_статьи_выходного_дня","react","timeweb_статьи_перевод","история","arduino","история it","микроконтроллеры","iot","react.js","игры","reactjs","timeweb_новости","typescript","linux","ссср","автоматизация"],"descriptionHtml":"807 статей от авторов компании Timeweb Cloud","description":"807 статей от авторов компании Timeweb Cloud"},"aDeskSettings":null,"careerAlias":"hrtimewebru"}},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"unreadCount":0,"pagesCount":0},"desktopState":{"desktopFl":null,"desktopHl":null,"isChecked":false,"isLoginDemanded":false},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"flows":{"updates":{"countNewPostsBySubscription":null,"countNewPostsAll":28,"countNewNewsAll":12},"flows":[{"alias":"develop","id":"1","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"alias":"admin","id":"6","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"alias":"design","id":"2","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"alias":"management","id":"3","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"alias":"marketing","id":"4","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"alias":"popsci","id":"7","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}]},"global":{"isPwa":false,"device":"desktop","isHabrCom":true},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"infoPage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":{},"pathname":null,"path":null,"href":""}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null},"modal":{"modals":[]},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":false,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-256","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F9f9\u002Fe16\u002Faa3\u002F9f9e16aa3959d9417693b87b33b5960a.png","title":"Хабр Карьера","link":"https:\u002F\u002Fu.habr.com\u002FfWIWD"},"title":"Карьерная неделя с победителями рейтинга","lang":"ru","startTime":"2023-02-22T13:00:00+03:00","finishTime":"2023-02-27T12:43:00+03:00","slides":[{"id":"story-256_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F412\u002F447\u002Fe40\u002F412447e40a7f9d7d0bc3def931a8f531.png","button":null},{"id":"story-256_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe5a\u002F945\u002F506\u002Fe5a94550609aa2470112448d69291f01.png","button":null},{"id":"story-256_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F68f\u002Ffd1\u002Fe00\u002F68ffd1e00991476e865643cfb0c1b7a3.png","button":{"title":"Перейти в канал","link":"https:\u002F\u002Fu.habr.com\u002FmZQU8","colorType":"light"}}]},{"id":"story-254","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7ca\u002Fd19\u002F564\u002F7cad19564e3da01131c205970297efed.png","title":"Хабр Новости","link":"https:\u002F\u002Fu.habr.com\u002FW9ecI"},"title":"Снимок мощной солнечной вспышки","lang":"ru","startTime":"2023-02-22T12:10:00+03:00","finishTime":"2023-03-05T11:56:00+03:00","slides":[{"id":"story-254_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e5\u002F39c\u002Fd83\u002F1e539cd8310dbe3ebcb14cffc293a7ff.png","button":null},{"id":"story-254_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0cd\u002F0a3\u002F1a9\u002F0cd0a31a9f2ad25a56848a8c6fa7860e.png","button":null},{"id":"story-254_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd15\u002Faec\u002Fadd\u002Fd15aecadde84e134c75b642bdadad5f7.png","button":{"title":"Подробности","link":"https:\u002F\u002Fu.habr.com\u002FW9ecI","colorType":"light"}}]},{"id":"story-252","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff19\u002F48d\u002Fd15\u002Ff1948dd155701f88d36e11387c1660ef.png","title":"Geek Travel","link":"https:\u002F\u002Fu.habr.com\u002F9TZjL"},"title":"Где искать северное сияние в России","lang":"ru","startTime":"2023-02-21T11:35:00+03:00","finishTime":"2023-03-05T11:22:00+03:00","slides":[{"id":"story-252_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F506\u002F188\u002F83b\u002F50618883bc97ce517531018d3290d961.jpg","button":{"title":"К посту","link":"https:\u002F\u002Fu.habr.com\u002F9TZjL","colorType":"light"}},{"id":"story-252_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe42\u002Fa71\u002Fe8e\u002Fe42a71e8eb5583814647f5ad55f9e0ae.jpg","button":null},{"id":"story-252_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F685\u002Fdbe\u002F4ff\u002F685dbe4ffe3940eca28ede7406898846.jpg","button":null},{"id":"story-252_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F383\u002F63b\u002F1f4\u002F38363b1f459d5daace0e4502f0780737.jpg","button":null},{"id":"story-252_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F32b\u002F665\u002F0c4\u002F32b6650c448d698b9ca4dba128afb56e.jpg","button":null},{"id":"story-252_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95e\u002F0b2\u002F5be\u002F95e0b25be55ae919dbebbac6142e670d.jpg","button":null},{"id":"story-252_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F616\u002F1d4\u002Ff84\u002F6161d4f849be8d4e4aeee88ea2e3d572.jpg","button":null}]},{"id":"story-250","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F09c\u002F0f6\u002F15d\u002F09c0f615db74086a1611243d250411eb.png","title":"Хабр","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fhabr\u002Fblog\u002F"},"title":"Лучшее из блогов компаний за неделю","lang":"ru","startTime":"2023-02-21T10:20:00+03:00","finishTime":"2023-02-28T15:20:00+03:00","slides":[{"id":"story-250_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff8d\u002F1f4\u002Fcc3\u002Ff8d1f4cc328fb5308a64c97976ad821a.jpg","button":null},{"id":"story-250_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcf9\u002Fe08\u002F87e\u002Fcf9e0887eda5882faea090e93cfeb057.jpg","button":{"title":"Смотреть списки","link":"https:\u002F\u002Fu.habr.com\u002Fss-tt","colorType":"light"}},{"id":"story-250_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8db\u002Faae\u002F8d4\u002F8dbaae8d401dc775493cce70e4096a89.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fyandex\u002Fblog\u002F716524\u002F","colorType":"light"}},{"id":"story-250_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffe5\u002Fb10\u002F831\u002Ffe5b10831e5a6fbe445a2bd3de96c808.jpg","button":{"title":"Подробнее","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fdododev\u002Fblog\u002F714512\u002F","colorType":"light"}},{"id":"story-250_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0c7\u002Fd91\u002Ff10\u002F0c7d91f101a28ab92af503dd97e9a511.jpg","button":{"title":"Читать советы","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fproductivity_inside\u002Fblog\u002F717108\u002F","colorType":"light"}},{"id":"story-250_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F4ea\u002F32a\u002F3dc\u002F4ea32a3dc44b42aaf23c65c43dde62b1.jpg","button":{"title":"Окунуться в прошлое","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Ftimeweb\u002Fblog\u002F714894\u002F","colorType":"light"}},{"id":"story-250_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6f9\u002F3f3\u002F016\u002F6f93f30163ac0c7307ac32d74832049a.jpg","button":{"title":"Размышления","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fcloud4y\u002Fblog\u002F715668\u002F","colorType":"light"}},{"id":"story-250_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3e1\u002F35b\u002F17d\u002F3e135b17de83de5d5a9fd901e439221a.jpg","button":{"title":"Узнать больше","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fruvds\u002Fblog\u002F714946\u002F","colorType":"light"}}]},{"id":"story-246","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc41\u002F8cc\u002Fca9\u002Fc418ccca924faf05c11530c5071e627b.png","title":"Хабр Карьера","link":"https:\u002F\u002Fu.habr.com\u002Fitzp2022-new"},"title":"Зарплаты в IT во второй половине 2022","lang":"ru","startTime":"2023-02-20T11:05:00+03:00","finishTime":"2023-03-05T23:59:00+03:00","slides":[{"id":"story-246_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbe2\u002F07d\u002F19f\u002Fbe207d19f3cdc4b89e3618025c071ea0.png","button":null},{"id":"story-246_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcda\u002F93e\u002Fed7\u002Fcda93eed762714814ddfc51c4712f4ed.png","button":null},{"id":"story-246_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb8a\u002Fde4\u002F87f\u002Fb8ade487fa6556af459e032adebf852d.png","button":null},{"id":"story-246_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8f6\u002Fb32\u002F844\u002F8f6b328448ed968a18a60a0cd745bd34.png","button":{"title":"Подробнее","link":"https:\u002F\u002Fu.habr.com\u002Fitzp2022-new","colorType":"dark"}}]},{"id":"story-222","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F312\u002Fabe\u002Fd4c\u002F312abed4c2617f05f485c19ae101de7e.png","title":"Хабр","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fhabr\u002Fblog\u002F"},"title":"Любовь, Хабр и роботы","lang":"ru","startTime":"2023-02-14T09:00:14+03:00","finishTime":"2023-02-26T23:59:00+03:00","slides":[{"id":"story-222_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd35\u002Fce5\u002F716\u002Fd35ce5716f14544be26d53e05dc155ab.jpg","button":null},{"id":"story-222_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F191\u002Fb9c\u002F449\u002F191b9c449738d2cb2333ffa8daa1bd39.jpg","button":{"title":"Читать переводы","link":"https:\u002F\u002Fu.habr.com\u002Fval1","colorType":"light"}},{"id":"story-222_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7c6\u002F61d\u002F6d9\u002F7c661d6d915ca10f037ccc7307fa36ec.jpg","button":{"title":"Что получилось?","link":"https:\u002F\u002Fu.habr.com\u002Fval2","colorType":"light"}},{"id":"story-222_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F02c\u002F20a\u002Fa28\u002F02c20aa28f1e1cb7d70943bd96eb5ac7.jpg","button":{"title":"Созерцать","link":"https:\u002F\u002Fu.habr.com\u002Fval3","colorType":"light"}},{"id":"story-222_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe94\u002F9d6\u002F03e\u002Fe949d603e63cf1c98dcc4597ba41abfa.jpg","button":{"title":"На свидание","link":"https:\u002F\u002Fu.habr.com\u002Fval4","colorType":"light"}},{"id":"story-222_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7b0\u002F3b3\u002Fed9\u002F7b03b3ed931ce73a0cda771b5e39c813.jpg","button":{"title":"Нашёл?","link":"https:\u002F\u002Fu.habr.com\u002Fval5","colorType":"light"}},{"id":"story-222_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F594\u002Fff6\u002Fbad\u002F594ff6badc0503fa3ca0dffafc31d3a3.jpg","button":{"title":"И сколько же?","link":"https:\u002F\u002Fu.habr.com\u002Fval6","colorType":"light"}},{"id":"story-222_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F452\u002Ff87\u002F9aa\u002F452f879aaf0db9530f35204663ec00e6.jpg","button":{"title":"Глянуть код","link":"https:\u002F\u002Fu.habr.com\u002Fval7","colorType":"light"}}]},{"id":"story-186","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb6b\u002F720\u002F180\u002Fb6b72018041811571246ddf5ef07bd33.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Fstory_season-kuber"},"title":"Столкнуться с кубом","lang":"ru","startTime":"2023-02-01T11:30:00+03:00","finishTime":"2023-02-28T23:59:00+03:00","slides":[{"id":"story-186_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2b0\u002F5e8\u002Fffb\u002F2b05e8ffb30634f0f7f5c9602d8e43e6.png","button":null},{"id":"story-186_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdfb\u002F838\u002F9c1\u002Fdfb8389c197e915942f9144978b91ce4.png","button":null},{"id":"story-186_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F634\u002Fc42\u002Fdfd\u002F634c42dfddb260cdf37f9c9b9d3f34ea.png","button":null},{"id":"story-186_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F401\u002F9f5\u002F59e\u002F4019f559e6c090ded0b46d6deeb4883c.png","button":null},{"id":"story-186_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F82a\u002F9cd\u002Fa48\u002F82a9cda4870156765b749271aca48241.png","button":{"title":"Смотреть участников","link":"https:\u002F\u002Fu.habr.com\u002Fstory_season-kuber_members","colorType":"light"}}]},{"id":"story-152","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa49\u002F0d3\u002F609\u002Fa490d3609f29b6dfc53a7b88ab47ca64.png","title":"Хабр","link":"https:\u002F\u002Fu.habr.com\u002Fstory_HiM-anketa"},"title":"Сеньоры — очень странные люди","lang":"ru","startTime":"2023-01-23T11:00:00+03:00","finishTime":"2023-03-01T23:59:00+03:00","slides":[{"id":"story-152_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbbb\u002F901\u002F063\u002Fbbb9010630ae483ed1f41ec4e2572c13.png","button":null},{"id":"story-152_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F4f8\u002F66c\u002F14f\u002F4f866c14f0ca8999334438d7f17c0e3a.png","button":null},{"id":"story-152_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6b9\u002Fa07\u002Fa61\u002F6b9a07a612df213ac3a1c179301828df.png","button":null},{"id":"story-152_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff6b\u002Fadb\u002Fb99\u002Ff6badbb9969d7e34ef4f7492767c6a77.png","button":null},{"id":"story-152_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd9c\u002F9ac\u002F878\u002Fd9c9ac878bec5b494699e0080dd2e813.png","button":null},{"id":"story-152_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdb1\u002Faf9\u002Fc3b\u002Fdb1af9c3bb557f6cee698cf67610f977.png","button":null},{"id":"story-152_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F5cf\u002Fbed\u002F65b\u002F5cfbed65bd20b7051b1aac2b9d6e807e.png","button":null},{"id":"story-152_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffa8\u002F251\u002F4a9\u002Ffa82514a9471cd455339e97178d8c021.png","button":null},{"id":"story-152_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbd5\u002F901\u002Fe95\u002Fbd5901e952d9cf638355a3cc8b0c0911.png","button":{"title":"Хочу помочь джуну","link":"https:\u002F\u002Fu.habr.com\u002Fstory_HiM-anketa","colorType":"light"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"items":{},"pagesCache":{},"markedViewedSilently":{},"markedRead":{},"unreadCounters":{"applications":null,"system":null,"mentions":null,"subscribers":null,"posts_and_comments":null},"unviewedCounters":{"applications":null,"system":null,"mentions":null,"subscribers":null,"posts_and_comments":null}}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script>
<script src="https://assets.habr.com/habr-web/js/chunk-vendors.2287bfbd.js" defer></script><script src="https://assets.habr.com/habr-web/js/7298.c8f1d73c.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.58744b80.js" defer></script>



    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-726094-1"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

    ym(24049213, "init", {
      defer:true,
      trackLinks:true,
      accurateTrackBounce:true,
      webvisor:false,
    });
  </script>
  <noscript>
    <div>
      <img src="https://mc.yandex.ru/watch/24049213" style="position:absolute; left:-9999px;" alt="" />
    </div>
  </noscript>
  
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
<script src="/js/ads.js" onload="window['zhY4i4nJ9K'] = true"></script>
</body>
</html>
