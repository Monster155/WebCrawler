<!DOCTYPE html>
<html lang="ru" data-vue-meta="%7B%22lang%22:%7B%22ssr%22:%22ru%22%7D%7D">
<head >
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1.0,viewport-fit=cover,maximum-scale=1,user-scalable=0">
  <meta name="referrer" content="unsafe-url">
  <title>Оптимизация OneToMany коллекций Doctrine / Хабр</title>
  <style>
    /* cyrillic-ext */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveSxf6TF0.woff2) format('woff2');
      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
    }

    /* cyrillic */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveQhf6TF0.woff2) format('woff2');
      unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
    }

    /* latin-ext */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveSBf6TF0.woff2) format('woff2');
      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
    }

    /* latin */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/s/firasans/v11/va9B4kDNxMZdWfMOD5VnZKveRhf6.woff2) format('woff2');
      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    }

    /* non-breaking hyphen */
    @font-face {
      font-family: 'Fira Sans';
      font-style: normal;
      font-weight: 500;
      font-display: swap;
      src: url(https://fonts.gstatic.com/l/font?kit=KFOlCnqEu92Fr1MmEU9vBh0_IsHAlmrO6g&skey=ee881451c540fdec&v=v29) format('woff2');
      unicode-range: U+02011;
    }
  </style>
  <link rel="preload" href="https://assets.habr.com/habr-web/css/chunk-vendors.b6238726.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/chunk-vendors.2287bfbd.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/css/app.8d73f026.css" as="style"><link rel="preload" href="https://assets.habr.com/habr-web/js/app.58744b80.js" as="script"><link rel="preload" href="https://assets.habr.com/habr-web/js/7298.c8f1d73c.js" as="script">
  <link rel="stylesheet" href="https://assets.habr.com/habr-web/css/chunk-vendors.b6238726.css"><link rel="stylesheet" href="https://assets.habr.com/habr-web/css/app.8d73f026.css">
  <script>window.i18nFetch = new Promise((res, rej) => {
          const xhr = new XMLHttpRequest();
          xhr.open('GET', '/js/i18n/ru-compiled.99fdff73029c662d76a25e7927355795.json');
          xhr.responseType = 'json';
          xhr.onload = function(e) {
            if (this.status === 200) {
              res({ru: xhr.response});
            } else {
              rej(e);
            }
          };
          xhr.send();
        });</script>
  
  <script data-vue-meta="ssr" type="application/ld+json" data-vmid="ldjson-schema">{"@context":"http:\/\/schema.org","@type":"Article","mainEntityOfPage":{"@type":"WebPage","@id":"https:\/\/habr.com\/ru\/post\/715942\/"},"headline":"Оптимизация OneToMany коллекций Doctrine","datePublished":"2023-02-09T18:43:57+03:00","dateModified":"2023-02-12T11:39:21+03:00","author":{"@type":"Person","name":"Ян Иванов"},"publisher":{"@type":"Organization","name":"Habr","logo":{"@type":"ImageObject","url":"https:\/\/habrastorage.org\/webt\/a_\/lk\/9m\/a_lk9mjkccjox-zccjrpfolmkmq.png"}},"description":"В этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в к...","url":"https:\/\/habr.com\/ru\/post\/715942\/#post-content-body","about":["h_php","h_programming","h_symfony","h_doctrine","f_develop"],"image":["https:\/\/habr.com\/share\/publication\/715942\/d13a9347eb01af109585e91e8ab639ad\/"]}</script>
  <script src="//www.googletagservices.com/tag/js/gpt.js" async></script>
  <style>.grecaptcha-badge{visibility: hidden;}</style>
  <meta name="habr-version" content="2.113.0">
  
  <meta data-vue-meta="ssr" property="fb:app_id" content="444736788986613"><meta data-vue-meta="ssr" property="fb:pages" content="472597926099084"><meta data-vue-meta="ssr" name="twitter:card" content="summary_large_image"><meta data-vue-meta="ssr" name="twitter:site" content="@habr_com"><meta data-vue-meta="ssr" property="og:site_name" content="Хабр" data-vmid="og:site_name"><meta data-vue-meta="ssr" property="og:title" content="Оптимизация OneToMany коллекций Doctrine" data-vmid="og:title"><meta data-vue-meta="ssr" name="twitter:title" content="Оптимизация OneToMany коллекций Doctrine" data-vmid="twitter:title"><meta data-vue-meta="ssr" name="aiturec:title" content="Оптимизация OneToMany коллекций Doctrine" data-vmid="aiturec:title"><meta data-vue-meta="ssr" name="description" content="В этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в контексте PHP и Doctrine ORM. Полный..." data-vmid="description"><meta data-vue-meta="ssr" itemprop="description" content="В этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в контексте PHP и Doctrine ORM. Полный..." data-vmid="description:itemprop"><meta data-vue-meta="ssr" property="og:description" content="В этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в контексте PHP и Doctrine ORM. Полный..." data-vmid="og:description"><meta data-vue-meta="ssr" name="twitter:description" content="В этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в контексте PHP и Doctrine ORM. Полный..." data-vmid="twitter:description"><meta data-vue-meta="ssr" property="aiturec:description" content="В этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в контексте PHP и Doctrine ORM. Полный..." data-vmid="aiturec:description"><meta data-vue-meta="ssr" itemprop="image" content="https://habr.com/share/publication/715942/d13a9347eb01af109585e91e8ab639ad/" data-vmid="image:itemprop"><meta data-vue-meta="ssr" property="og:image" content="https://habr.com/share/publication/715942/d13a9347eb01af109585e91e8ab639ad/" data-vmid="og:image"><meta data-vue-meta="ssr" property="og:image:width" content="1200" data-vmid="og:image:width"><meta data-vue-meta="ssr" property="og:image:height" content="630" data-vmid="og:image:height"><meta data-vue-meta="ssr" property="aiturec:image" content="https://habr.com/share/publication/715942/d13a9347eb01af109585e91e8ab639ad/" data-vmid="aiturec:image"><meta data-vue-meta="ssr" name="twitter:image" content="https://habr.com/share/publication/715942/d13a9347eb01af109585e91e8ab639ad/" data-vmid="twitter:image"><meta data-vue-meta="ssr" property="vk:image" content="https://habr.com/share/publication/715942/d13a9347eb01af109585e91e8ab639ad/?format=vk" data-vmid="vk:image"><meta data-vue-meta="ssr" property="aiturec:item_id" content="715942" data-vmid="aiturec:item_id"><meta data-vue-meta="ssr" property="aiturec:datetime" content="2023-02-09T15:43:57.000Z" data-vmid="aiturec:datetime"><meta data-vue-meta="ssr" content="https://habr.com/ru/post/715942/" property="og:url" data-vmid="og:url"><meta data-vue-meta="ssr" property="og:type" content="article" data-vmid="og:type"><meta data-vue-meta="ssr" property="og:locale" content="ru_RU" data-vmid="og:locale"><meta data-vue-meta="ssr" name="keywords" content="php, symfony, doctrine orm, postgresql, базы данных">
  <link data-vue-meta="ssr" href="https://habr.com/ru/rss/post/715942/?fl=ru" type="application/rss+xml" title="" rel="alternate" name="rss"><link data-vue-meta="ssr" href="https://habr.com/ru/post/715942/" rel="canonical" data-vmid="canonical"><link data-vue-meta="ssr" rel="image_src" href="https://habr.com/share/publication/715942/d13a9347eb01af109585e91e8ab639ad/" data-vmid="image:href"><link data-vue-meta="ssr" rel="amphtml" href="https://habr.com/ru/amp/post/715942/">
  <meta name="apple-mobile-web-app-status-bar-style" content="#303b44">
  <meta name="msapplication-TileColor" content="#629FBC">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="mobile-web-app-capable" content="yes">
  <link
    rel="shortcut icon"
    type="image/png"
    sizes="16x16"
    href="https://assets.habr.com/habr-web/img/favicons/favicon-16.png"
  >
  <link
    rel="shortcut icon"
    type="image/png"
    sizes="32x32"
    href="https://assets.habr.com/habr-web/img/favicons/favicon-32.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="76x76"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-76.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="120x120"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="152x152"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-152.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="180x180"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-180.png"
  >
  <link
    rel="apple-touch-icon"
    type="image/png"
    sizes="256x256"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-256.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1136x640.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2436x1125.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1792x828.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_828x1792.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1334x750.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2208x1242.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1125x2436.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1242x2208.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2732x2048.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2688x1242.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2224x1668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_750x1334.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2048x2732.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2388x1668.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2224.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_640x1136.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1668x2388.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_2048x1536.png"
  >
  <link
    rel="apple-touch-startup-image"
    media="screen and (device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)"
    href="https://assets.habr.com/habr-web/img/splashes/splash_1536x2048.png"
  >
  <link
    rel="mask-icon"
    color="#77a2b6"
    href="https://assets.habr.com/habr-web/img/favicons/apple-touch-icon-120.svg"
  >
  <link
    crossorigin="use-credentials"
    href="/manifest.webmanifest"
    rel="manifest"
  >
  <script async src="https://unpkg.com/pwacompat" crossorigin="anonymous"></script>
  <script>window.yaContextCb = window.yaContextCb || []</script>
  <script src="https://yandex.ru/ads/system/context.js" async></script>
</head>
<body>


<div id="app" data-server-rendered="true" data-async-called="true"><div class="tm-layout__wrapper"><!----> <div></div> <!----> <header class="tm-header"><div class="tm-page-width"><div class="tm-header__container"><!----> <span class="tm-header__logo-wrap"><a href="/ru/" class="tm-header__logo tm-header__logo_ru"><svg height="16" width="16" class="tm-svg-img tm-header__icon"><title>Хабр</title> <use xlink:href="/img/habr-logo-ru.svg#logo"></use></svg></a> <span class="tm-header__beta-sign" style="display:none;">β</span></span> <div class="tm-dropdown tm-header__projects"><div class="tm-dropdown__head"><button class="tm-header__dropdown-toggle"><svg height="16" width="16" class="tm-svg-img tm-header__icon tm-header__icon_dropdown"><title>Открыть список</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#arrow-down"></use></svg></button></div> <!----></div> <a href="/ru/sandbox/start/" class="tm-header__become-author-btn">
            Как стать автором
          </a> <div class="tm-feature tm-header__feature tm-feature tm-feature_variant-inline"><!----></div> <!----> <!----></div></div></header> <div class="tm-layout"><div class="tm-page-progress-bar"></div> <div data-menu-sticky="true" class="tm-base-layout__header tm-base-layout__header_is-sticky"><div class="tm-page-width"><div class="tm-base-layout__header-wrapper"><div class="tm-main-menu"><div class="tm-main-menu__section"><nav class="tm-main-menu__section-content"><!----> <a href="/ru/all/" class="tm-main-menu__item">
        Все потоки
      </a> <a href="/ru/flows/develop/" class="tm-main-menu__item">
          Разработка
        </a><a href="/ru/flows/admin/" class="tm-main-menu__item">
          Администрирование
        </a><a href="/ru/flows/design/" class="tm-main-menu__item">
          Дизайн
        </a><a href="/ru/flows/management/" class="tm-main-menu__item">
          Менеджмент
        </a><a href="/ru/flows/marketing/" class="tm-main-menu__item">
          Маркетинг
        </a><a href="/ru/flows/popsci/" class="tm-main-menu__item">
          Научпоп
        </a></nav></div></div> <div class="tm-header-user-menu tm-base-layout__user-menu"><a href="/ru/search/" class="tm-header-user-menu__item tm-header-user-menu__search"><svg height="24" width="24" class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_search tm-header-user-menu__icon_dark"><title>Поиск</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#search"></use></svg></a> <!----> <!----> <!----> <div class="tm-header-user-menu__item tm-header-user-menu__user_desktop"><div class="tm-dropdown"><div class="tm-dropdown__head"><svg height="24" width="24" data-test-id="menu-toggle-guest" class="tm-svg-img tm-header-user-menu__icon tm-header-user-menu__icon_dark"><title>Профиль</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#header-user"></use></svg> <!----></div> <!----></div> <!----></div> <!----></div></div></div></div> <!----> <div class="tm-page-width"></div> <main class="tm-layout__container"><div hl="ru" data-async-called="true" class="tm-page"><div class="tm-page-width"><!----> <div class="tm-page__wrapper"><div class="tm-page__main tm-page__main_has-sidebar"><div class="pull-down"><!----> <div class="pull-down__header" style="height:0px;"><div class="pull-down__content" style="bottom:10px;"><svg height="24" width="24" class="tm-svg-img pull-down__arrow"><title>Обновить</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#pull-arrow"></use></svg></div></div> <div class="tm-article-presenter"> <div class="tm-article-presenter__body"><div class="tm-misprint-area"><div class="tm-misprint-area__wrapper"><article class="tm-article-presenter__content tm-article-presenter__content_narrow"><div class="tm-article-presenter__header"> <div class="tm-article-snippet tm-article-presenter__snippet tm-article-snippet"><div class="tm-article-snippet__meta-container"><div class="tm-article-snippet__meta"><span class="tm-user-info tm-article-snippet__author"><a href="/ru/users/franzose/" title="franzose" class="tm-user-info__userpic"><div class="tm-entity-image"><img alt="" height="24" src="//habrastorage.org/r/w32/getpro/habr/avatars/298/253/1e7/2982531e7c120975340bacdb184a9599.jpg" width="24" class="tm-entity-image__pic"></div></a> <span class="tm-user-info__user"><a href="/ru/users/franzose/" class="tm-user-info__username">
      franzose
      <!----></a> <span class="tm-article-datetime-published"><time datetime="2023-02-09T15:43:57.000Z" title="2023-02-09, 18:43">9  фев   в 18:43</time></span></span></span></div> <!----></div> <h1 lang="ru" class="tm-article-snippet__title tm-article-snippet__title_h1"><span>Оптимизация OneToMany коллекций Doctrine</span></h1> <div class="tm-article-snippet__stats"><!----> <div class="tm-article-reading-time"><span class="tm-svg-icon__wrapper tm-article-reading-time__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Время на прочтение</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#clock"></use></svg></span> <span class="tm-article-reading-time__label">
    13 мин
  </span></div> <span class="tm-icon-counter tm-data-icons__item"><svg height="24" width="24" class="tm-svg-img tm-icon-counter__icon"><title>Количество просмотров</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-views"></use></svg> <span class="tm-icon-counter__value">2K</span></span></div> <div class="tm-article-snippet__hubs-container"><div class="tm-article-snippet__hubs"><span class="tm-article-snippet__hubs-item"><a href="/ru/hub/php/" class="tm-article-snippet__hubs-item-link"><span>PHP</span> <span title="Профильный хаб" class="tm-article-snippet__profiled-hub">*</span></a></span><span class="tm-article-snippet__hubs-item"><a href="/ru/hub/programming/" class="tm-article-snippet__hubs-item-link"><span>Программирование</span> <span title="Профильный хаб" class="tm-article-snippet__profiled-hub">*</span></a></span><span class="tm-article-snippet__hubs-item"><a href="/ru/hub/symfony/" class="tm-article-snippet__hubs-item-link"><span>Symfony</span> <span title="Профильный хаб" class="tm-article-snippet__profiled-hub">*</span></a></span><span class="tm-article-snippet__hubs-item"><a href="/ru/hub/doctrine/" class="tm-article-snippet__hubs-item-link"><span>Doctrine ORM</span> <span title="Профильный хаб" class="tm-article-snippet__profiled-hub">*</span></a></span></div></div> <!----> <!----> <!----></div></div> <!----> <div data-gallery-root="" lang="ru" class="tm-article-body"><div></div> <div id="post-content-body"><div><div class="article-formatted-body article-formatted-body article-formatted-body_version-2"><div xmlns="http://www.w3.org/1999/xhtml"><p>В этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в контексте PHP и Doctrine ORM. Полный пример решения вы можете посмотреть в специальном <a href="https://github.com/franzose/doctrine-collections-fix-example" rel="noopener noreferrer nofollow"><u>репозитории</u></a>. Статья основана на решении проблемы из обсуждения на <a href="https://stackoverflow.com/questions/13623285" rel="noopener noreferrer nofollow"><u>StackOverflow</u></a>.</p><p>Многие из нас сталкивались с необходимостью манипуляции иерархическими структурами данных. Например, категориями товаров. Существуют <a href="https://www.slideshare.net/billkarwin/models-for-hierarchical-data" rel="noopener noreferrer nofollow"><u>различные способы</u></a> хранения подобных структур в БД, оптимизированные под те или иные варианты использования. На проекте, где работал я, использовался комбинированный способ: <a href="https://www.programiz.com/dsa/graph-adjacency-list" rel="noopener noreferrer nofollow"><u>adjacency list</u></a> + <a href="https://dzone.com/articles/materialized-paths-tree-structures-relational-database" rel="noopener noreferrer nofollow"><u>materialized path</u></a>. Поэтому решение проблемы в данной статье рассчитано именно на использование adjacency list для связей между сущностями.</p><h2>База данных</h2><p>Для решения нашей задачи подойдет любая база данных, поддерживаемая Doctrine DBAL / ORM. Мы воспользуемся PostgreSQL. Пусть категории хранятся следующим образом:</p><pre><code class="php">create sequence public.category_id_seq
    increment by 1;

create table if not exists public.category
(
    id         bigint default nextval('category_id_seq'::regclass) not null primary key,
    parent_id  bigint constraint fk_category_id references public.category,
    uid        text not null,
    name       text not null,
    created_at timestamp(0) with time zone not null,
    updated_at timestamp(0) with time zone not null
);

create unique index uniq_category_uid
    on public.category (uid);</code></pre><p>Древовидная структура категорий реализуется с помощью ссылки таблицы <code>category</code> самой на себя по внешнему ключу <code>parent_id</code>. Вместе с этим у нас есть возможность определить полный путь к категории с помощью уникального поля <code>uid</code>, в котором уровни вложенности будут отделяться нижним подчеркиванием. То есть, <code>foo_bar</code> – это категория второго уровня.</p><h2>Сущность</h2><p>Теперь напишем минимально необходимый код сущности:</p><pre><code class="php">&lt;?php
declare(strict_types=1);

namespace Hierarchy;

use DateTimeImmutable;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping\Column;
use Doctrine\ORM\Mapping\Entity;
use Doctrine\ORM\Mapping\GeneratedValue;
use Doctrine\ORM\Mapping\Id;
use Doctrine\ORM\Mapping\JoinColumn;
use Doctrine\ORM\Mapping\ManyToOne;
use Doctrine\ORM\Mapping\OneToMany;
use Doctrine\ORM\Mapping\Table;

#[Entity, Table('category')]
class Category
{
    #[Column(name: 'parent_id', type: 'bigint', nullable: true)]
    private ?int $parentId;
    
    #[Column(name: 'uid', type: 'string', nullable: false)]
    private string $uid;

    #[OneToMany(mappedBy: 'parent', targetEntity: self::class)]
    private Collection $children;

    #[Column(name: 'created_at', type: 'datetimetz_immutable', nullable: false)]
    private DateTimeImmutable $createdAt;

    #[Column(name: 'updated_at', type: 'datetimetz_immutable', nullable: false)]
    private DateTimeImmutable $updatedAt;

    public function __construct(
        #[Id]
        #[Column(name: 'id', type: 'bigint', nullable: false)]
        #[GeneratedValue(strategy: 'NONE')]
        private int $id,
        string $uid,
        #[Column(name: 'name', type: 'string', nullable: false)]
        private string $name,
        #[ManyToOne(targetEntity: self::class, inversedBy: 'children')]
        #[JoinColumn(name: 'parent_id', referencedColumnName: 'id')]
        private ?self $parent = null
    ) {
        $this->parentId = $this->parent?->id;
        $this->uid = $this->parent === null ? $uid : sprintf('%s_%s', $this->parent->uid, $uid);
        $this->createdAt = new DateTimeImmutable();
        $this->updatedAt = new DateTimeImmutable();
        $this->children = new ArrayCollection();
    }

    public function id(): int
    {
        return $this->id;
    }

    public function uid(): string
    {
        return $this->uid;
    }

    public function name(): string
    {
        return $this->name;
    }

    public function parent(): ?self
    {
        return $this->parent;
    }

    public function parentId(): ?int
    {
        return $this->parentId;
    }
    
    public function children(): Collection
    {
        return new ArrayCollection($this->children->toArray());
    }
}</code></pre><p>Обычно связь <code>ManyToOne</code> определяют одним полем. Например, <code>parent</code> из нашего примера. По умолчанию, при первом обращении к такому полю Doctrine сделает дополнительный запрос в БД, чтобы загрузить связанную сущность в память. Если же указана жадная загрузка <code>fetch: EAGER</code>, то связанная сущность будет подгружена вместе с основной сущностью. В нашем случае это привело бы к каскадной подгрузке поддерева, поскольку сущность Category ссылается сама на себя. С моей точки зрения, данный побочный эффект является крайне нежелательным из-за расхода большого количества оперативной памяти на данные, которые могут даже не понадобиться.</p><p>Поэтому, когда нам необходим только идентификатор связанной сущности (в данном случае – родительской категории), а не вся сущность целиком, мы будем использовать отдельное поле <code>parentId</code>. Установив значение этого поля в конструкторе, в дальнейшем мы всегда будем иметь актуальное значение идентификатора. Затем, при многократном использовании этого поля, дополнительных запросов в БД инициировано не будет. Данный подход нам пригодится далее при разработке оптимизированной подгрузки коллекции сущностей.</p><h2>Репозиторий</h2><p>Для начала определим интерфейс репозитория категорий. Этот интерфейс мы будем использовать при подмене реализации загрузки коллекции сущностей при тестировании.</p><pre><code class="php">&lt;?php
declare(strict_types=1);

namespace Hierarchy;

interface CategoryRepositoryInterface
{
    /**
     * Возвращает новый идентификатор категории.
     *
     * Стратегия формирования идентификатора зависит от конкретной реализации.
     */
    public function nextCategoryId(): int;

    /**
     * Возвращает потомки всех уровней для категории с указанным UID.
     *
     * @return Category[]
     */
    public function findDescendantsByUid(string $uid): array;
}</code></pre><p>Этих двух методов нам будет достаточно для тестирования. Стандартная реализация интерфейса может выглядеть следующим образом:</p><pre><code class="php">&lt;?php
declare(strict_types=1);

namespace Hierarchy;

use Doctrine\ORM\EntityManagerInterface;

final readonly class DefaultCategoryRepository implements CategoryRepositoryInterface
{
    public function __construct(private EntityManagerInterface $em)
    {
    }

    public function nextCategoryId(): int
    {
        return (int) $this->em
            ->getConnection()
            ->executeQuery("select nextval('category_id_seq')")
            ->fetchOne();
    }

    /**
     * @return Category[]
     */
    public function findDescendantsByUid(string $uid): array
    {
        return $this->em
            ->createQueryBuilder()
            ->select('c')
            ->from(Category::class, 'c')
            ->where('c.uid LIKE :uid')
            ->setParameter('uid', sprintf('%s_%%', $uid))
            ->orderBy('c.uid')
            ->getQuery()
            ->getResult();
    }
}</code></pre><p>Кратко о реализации. Метод <code>nextCategoryId</code> возвращает следующее значение последовательности PostgreSQL, которую мы определили в самом начале. Этим методом мы будем пользоваться для передачи идентификатора в конструктор сущностей Category и их сохранении в базу данных. Метод <code>findDescendantsByUid</code> возвращает массив потомков всех уровней для категории с указанным UID.</p><h2>Тестирование</h2><p>Чтобы проверить количество запросов в БД до и после “фикса”, воспользуемся библиотекой PHPUnit со следующей конфигурацией <code>phpunit.xml</code>:</p><pre><code class="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;!-- https://phpunit.readthedocs.io/en/latest/configuration.html -->
&lt;phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"
         colors="true"
         bootstrap="vendor/autoload.php"
>
    &lt;php>
        &lt;ini name="display_errors" value="1" />
        &lt;ini name="error_reporting" value="-1" />
        &lt;server name="DB_HOST" value="postgres" />
        &lt;server name="DB_PORT" value="5432" />
        &lt;server name="DB_USER" value="user" />
        &lt;server name="DB_PASSWORD" value="user" />
        &lt;server name="DB_NAME" value="hierarchy_article_test" />
        &lt;server name="DB_DRIVER" value="pdo_pgsql" />
        &lt;server name="DOCTRINE_SRC_DIR" value="./src" />
        &lt;server name="DOCTRINE_PROXY_DIR" value="./proxy" />
        &lt;server name="DOCTRINE_PROXY_NAMESPACE" value="HierarchyProxy\\" />
    &lt;/php>

    &lt;testsuites>
        &lt;testsuite name="Project Test Suite">
            &lt;directory>tests&lt;/directory>
        &lt;/testsuite>
    &lt;/testsuites>
&lt;/phpunit></code></pre><p>Итак, приступим к классу тестов и создадим метод <code>testBehavior</code>, в котором позже будет описана логика тестирования.</p><pre><code class="php">&lt;?php
declare(strict_types=1);

use PHPUnit\Framework\TestCase;

final class CategoryRepositoryTest extends TestCase
{
    public function testBehavior(): void
    {
        // здесь будет написан тест
    }
}</code></pre><p>А пока займемся подготовкой тестовых данных. Сначала напишем метод, который будет наполнять базу данных небольшим деревом категорий.</p><pre><code class="php">private static function createCategories(
    EntityManagerInterface $em,
    CategoryRepositoryInterface $repository
): void {
    $parent = new Category($repository->nextCategoryId(), 'foo', 'Foo');
    $child = new Category($repository->nextCategoryId(), 'bar', 'Bar', $parent);
    $grandChild = new Category($repository->nextCategoryId(), 'qux', 'Qux', $child);
    $grandGrandChild = new Category($repository->nextCategoryId(), 'doo', 'Doo', $grandChild);

    foreach ([$parent, $child, $grandChild, $grandGrandChild] as $entity) {
        $em->persist($entity);
    }

    $em->flush();
    $em->clear();
}</code></pre><p>Теперь нам нужны менеджер сущностей и репозиторий категорий. Опишем подключение к БД и непосредственно создание менеджера.</p><pre><code class="php">private static function createEntityManager(Connection $connection): EntityManagerInterface
{
    $config = new ORMConfiguration();
    $config->setMetadataDriverImpl(new AttributeDriver([$_SERVER['DOCTRINE_SRC_DIR']]));
    $config->setProxyDir($_SERVER['DOCTRINE_PROXY_DIR']);
    $config->setProxyNamespace($_SERVER['DOCTRINE_PROXY_NAMESPACE']);

    return new EntityManager($connection, $config);
}

private static function createConnection(LoggerInterface $logger): Connection
{
    $params = [
        'host' => $_SERVER['DB_HOST'],
        'port' => $_SERVER['DB_PORT'],
        'user' => $_SERVER['DB_USER'],
        'password' => $_SERVER['DB_PASSWORD'],
        'dbname' => $_SERVER['DB_NAME'],
        'driver' => $_SERVER['DB_DRIVER']
    ];

    $config = new DBALConfiguration();
    $config->setMiddlewares([
        new \Doctrine\DBAL\Logging\Middleware($logger)
    ]);

    return DriverManager::getConnection($params, $config);
}</code></pre><p>Суть теста заключается в проверке SQL-запросов, которые инициирует Doctrine, поэтому нам нужен логгер. Надеюсь, что вы вовремя обновляете зависимости на проекте, но всё же обращу ваше внимание на конфигурацию подключения к БД. В Doctrine DBAL 3.2.0 <a href="https://github.com/doctrine/dbal/pull/4967" rel="noopener noreferrer nofollow"><u>появился</u></a> механизм middleware, а метод <code>Configuration::setSQLLogger()</code> и класс <code>Doctrine\DBAL\Logging\DebugStack</code> были объявлены устаревшими и начали генерировать предупреждения. То есть, раньше можно было написать примерно следующее:</p><pre><code class="php">$debugStack = new DebugStack();
$em->getConnection()->getConfiguration()->setSQLLogger($debugStack);
// далее инициируем и исследуем запросы
$debugStack->queries;</code></pre><p>Однако теперь следует использовать middleware, как в примере выше. Причем аналога <code>DebugStack</code> в новых версиях Doctrine DBAL нет, поэтому его придется реализовывать самостоятельно. Но это не так уж и сложно. Вот пример такого логгера:</p><pre><code class="php">&lt;?php
declare(strict_types=1);

namespace Hierarchy\Tests;

use Psr\Log\AbstractLogger;
use Stringable;

final class TestDatabaseLogger extends AbstractLogger
{
    private array $queries = [];
    
    public function log($level, Stringable|string $message, array $context = []): void
    {
        if (array_key_exists('sql', $context)) {
            $this->queries[] = $context;
        }
    }

    /**
     * @return string[]
     */
    public function selectQueries(): array
    {
        $filter = static fn (string $query) => str_starts_with($query, 'SELECT');
        
        return array_values(array_filter(array_column($this->queries, 'sql'), $filter));
    }
}</code></pre><p>Теперь соберем всё воедино в методе <code>setUpTestData()</code>:</p><pre><code class="php">#[ArrayShape([TestDatabaseLogger::class, CategoryRepositoryInterface::class])]
private static function setUpTestData(string $repositoryClassName): array
{
    $logger = new TestDatabaseLogger();

    $connection = self::createConnection($logger);
    $connection->executeStatement('delete from category');

    $em = self::createEntityManager($connection);
    $repository = new $repositoryClassName($em);

    self::createCategories($em, $repository);

    return [$logger, $repository];
}</code></pre><p>Благодаря аргументу <code>$repositoryClassName</code> нам не придётся “хардкодить” конкретный класс репозитория, и мы сможем протестировать обе реализации выборки, “обычную” и оптимизированную, не меняя при ни тест, ни подготовительный код. Теперь напишем сам тест:</p><pre><code class="php">/**
 * @dataProvider behaviourDataProvider
 */
public function testBehavior(string $repositoryClassName, array $expectedQueries): void
{
    [$logger, $repository] = self::setUpTestData($repositoryClassName);

    // foo_bar, foo_bar_qux, foo_bar_qux_doo
    $descendants = $repository->findDescendantsByUid('foo');
    
    self::assertEquals('foo_bar_qux_doo', $descendants[0]->children()->first()->children()->first()->uid());
    self::assertEquals($expectedQueries, $logger->selectQueries());
}

public function behaviourDataProvider(): array
{
    return [
        [
            DefaultCategoryRepository::class,
            [
                'SELECT c0_.parent_id AS parent_id_0, c0_.uid AS uid_1, c0_.created_at AS created_at_2, c0_.updated_at AS updated_at_3, c0_.id AS id_4, c0_.name AS name_5, c0_.parent_id AS parent_id_6 FROM category c0_ WHERE c0_.uid LIKE ? ORDER BY c0_.uid ASC',
                'SELECT t0.parent_id AS parent_id_1, t0.uid AS uid_2, t0.created_at AS created_at_3, t0.updated_at AS updated_at_4, t0.id AS id_5, t0.name AS name_6, t0.parent_id AS parent_id_7 FROM category t0 WHERE t0.parent_id = ?',
                'SELECT t0.parent_id AS parent_id_1, t0.uid AS uid_2, t0.created_at AS created_at_3, t0.updated_at AS updated_at_4, t0.id AS id_5, t0.name AS name_6, t0.parent_id AS parent_id_7 FROM category t0 WHERE t0.parent_id = ?'
            ]
        ]
    ];
}</code></pre><p>И убедимся, что он проходит успешно:</p><pre><code class="bash">PHPUnit 9.5.27 by Sebastian Bergmann and contributors.

.                    1 / 1 (100%)

Time: 00:00.093, Memory: 10.00 MB

OK (1 test, 2 assertions)
Process finished with exit code 0
</code></pre><p>Суть теста заключается в следующем:</p><ol><li><p>Загрузить всех потомков сущности <code>foo</code></p></li><li><p>Взять сущность <code>foo_bar</code>, несколько раз переместиться вглубь дерева с помощью вызова метода <code>children()</code> и убедиться, что каждый такой вызов инициирует дополнительный SQL-запрос в БД</p></li></ol><p>Получается, что Doctrine загружает OneToMany-коллекцию из БД всякий раз, когда происходит обращение к соответствующему полю. Даже не смотря на то, что эти сущности уже были загружены в память. Как раз это нам и предстоит исправить.</p><h2>Оптимизация</h2><p>Создадим новый репозиторий <code>ImprovedCategoryRepository</code> со следующим содержимым:</p><pre><code class="php">&lt;?php
declare(strict_types=1);

namespace Hierarchy;

use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\PersistentCollection;

final readonly class ImprovedCategoryRepository implements CategoryRepositoryInterface
{
    public function __construct(private EntityManagerInterface $em)
    {
    }

    public function nextCategoryId(): int
    {
        return (int) $this->em
            ->getConnection()
            ->executeQuery("select nextval('category_id_seq')")
            ->fetchOne();
    }

    /**
     * @return Category[]
     */
    public function findDescendantsByUid(string $uid): array
    {
        $result = $this->em
            ->createQueryBuilder()
            ->select('c')
            ->from(Category::class, 'c')
            ->indexBy('c', 'c.id')
            ->where('c.uid LIKE :uid')
            ->setParameter('uid', sprintf('%s_%%', $uid))
            ->orderBy('c.uid')
            ->getQuery()
            ->getResult();

        return $this->setUpCategoryRelations($result);
    }

    /**
     * @param Category[] $categories
     * @return Category[]
     */
    private function setUpCategoryRelations(array $categories): array
    {
        $metadata = $this->em->getClassMetadata(Category::class);
        $idField = $metadata->reflFields['id'];
        $parentField = $metadata->reflFields['parent'];
        $parentIdField = $metadata->reflFields['parentId'];
        $childrenField = $metadata->reflFields['children'];

        foreach ($categories as $category) {
            /** @var PersistentCollection $children */
            $children = $childrenField->getValue($category);
            $children->setInitialized(true);

            $parent = $categories[$parentIdField->getValue($category)] ?? null;

            if ($parent === null) {
                continue;
            }

            /** @var PersistentCollection $children */
            $children = $childrenField->getValue($parent);

            if (!$children->contains($category)) {
                $parentField->setValue($category, $parent);
                $parentIdField->setValue($category, $idField->getValue($parent));
                $children->add($category);
            }
        }

        return array_values($categories);
    }
}</code></pre><p>DQL выборки отличается лишь тем, что мы указываем идентификатор сущности в качестве индекса массива. Это понадобится далее при обходе категорий:</p><pre><code class="php">$this->em
     ->createQueryBuilder()
     ->select('c')
     ->from(Category::class, 'c')
     ->indexBy('c', 'c.id')</code></pre><p>Всё самое интересное происходит далее в методе <code>setUpCategoryRelations()</code>. Для начала через метаданные мы выбираем поля сущности Category, с которыми будем работать.</p><pre><code class="php">$metadata = $this->em->getClassMetadata(Category::class);
$idField = $metadata->reflFields['id'];
$parentField = $metadata->reflFields['parent'];
$parentIdField = $metadata->reflFields['parentId'];
$childrenField = $metadata->reflFields['children'];</code></pre><p>Теперь мы “обманем” Doctrine и укажем, что все коллекции дочерних сущностей уже были проинициализированы:</p><pre><code class="php">/** @var PersistentCollection $children */
$children = $childrenField->getValue($category);
$children->setInitialized(true);</code></pre><p>Тогда при последующих обращениях к свойству <code>Category::$children</code> Doctrine не будет инициировать дополнительный запрос в БД! Но это только часть нашего “фикса”, ведь коллекции остаются пустыми. Поэтому соберем их вручную:</p><pre><code class="php">$parent = $categories[$parentIdField->getValue($category)] ?? null;

if ($parent === null) {
    continue;
}

/** @var PersistentCollection $children */
$children = $childrenField->getValue($parent);

if (!$children->contains($category)) {
    $parentField->setValue($category, $parent);
    $parentIdField->setValue($category, $idField->getValue($parent));
    $children->add($category);</code></pre><p>Из-за рефлексии код выглядит страшновато, но при этом имеет преимущества:</p><ol><li><p>Технические манипуляции над сущностями отделены от бизнес-логики</p></li><li><p>Какое бы то ни было изменение методов сущности не затронет репозиторий и не сломает его</p></li></ol><p>По факту код выше делает то же самое, как если бы в сущности мы написали такой метод и затем использовали его в репозитории:</p><pre><code class="php">public function addChild(self $child): void
{
    if (!$this->children->contains($child)) {
        $child->parent = $this;
        $child->parentId = $this->id;
        $this->children->add($child);
    }
}</code></pre><h2>Повторное тестирование</h2><p>Для тестирования оптимизированной реализации <code>CategoryRepositoryInterface</code> нам достаточно добавить второй набор данных в data provider  <code>CategoryRepositoryTest::behaviorDataProvider()</code>:</p><pre><code class="php">public function behaviourDataProvider(): array
{
    return [
        [
            DefaultCategoryRepository::class,
            [
                'SELECT c0_.parent_id AS parent_id_0, c0_.uid AS uid_1, c0_.created_at AS created_at_2, c0_.updated_at AS updated_at_3, c0_.id AS id_4, c0_.name AS name_5, c0_.parent_id AS parent_id_6 FROM category c0_ WHERE c0_.uid LIKE ? ORDER BY c0_.uid ASC',
                'SELECT t0.parent_id AS parent_id_1, t0.uid AS uid_2, t0.created_at AS created_at_3, t0.updated_at AS updated_at_4, t0.id AS id_5, t0.name AS name_6, t0.parent_id AS parent_id_7 FROM category t0 WHERE t0.parent_id = ?',
                'SELECT t0.parent_id AS parent_id_1, t0.uid AS uid_2, t0.created_at AS created_at_3, t0.updated_at AS updated_at_4, t0.id AS id_5, t0.name AS name_6, t0.parent_id AS parent_id_7 FROM category t0 WHERE t0.parent_id = ?'
            ]
        ],
        [
            ImprovedCategoryRepository::class,
            [
                'SELECT c0_.parent_id AS parent_id_0, c0_.uid AS uid_1, c0_.created_at AS created_at_2, c0_.updated_at AS updated_at_3, c0_.id AS id_4, c0_.name AS name_5, c0_.parent_id AS parent_id_6 FROM category c0_ WHERE c0_.uid LIKE ? ORDER BY c0_.uid ASC',
            ]
        ]
    ];
}</code></pre><p>Таким образом, мы ожидаем, что после загрузки коллекции сущностей с помощью метода <code>ImprovedCategoryRepository::findDescendantsByUid()</code> дальнейшие манипуляции над вложенными коллекциями не будут инициировать дополнительные запросы в БД. Убедимся в этом, повторно запустив тест:</p><pre><code class="bash">PHPUnit 9.5.27 by Sebastian Bergmann and contributors.

..                   2 / 2 (100%)

Time: 00:00.100, Memory: 10.00 MB

OK (2 tests, 4 assertions)
Process finished with exit code 0
</code></pre><p>Вуаля, наш “фикс” сработал! На больших деревьях эффект будет куда заметнее, т.к. вместо сотен или тысяч запросов будет выполняться лишь один: проверено на практике. Надеюсь, что статья была полезной для вас.</p><p></p></div></div></div> <!----> <!----></div> <!----> <!----></div> <!----> <div class="tm-article-presenter__meta"><div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Теги:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bphp%5D" class="tm-tags-list__link">php</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bsymfony%5D" class="tm-tags-list__link">symfony</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bdoctrine%20orm%5D" class="tm-tags-list__link">doctrine orm</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5Bpostgresql%5D" class="tm-tags-list__link">postgresql</a></li><li class="tm-separated-list__item"><a href="/ru/search/?target_type=posts&amp;order=relevance&amp;q=%5B%D0%B1%D0%B0%D0%B7%D1%8B%20%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85%5D" class="tm-tags-list__link">базы данных</a></li></ul></div> <div class="tm-separated-list tm-article-presenter__meta-list"><span class="tm-separated-list__title">Хабы:</span> <ul class="tm-separated-list__list"><li class="tm-separated-list__item"><a href="/ru/hub/php/" class="tm-hubs-list__link">PHP</a></li><li class="tm-separated-list__item"><a href="/ru/hub/programming/" class="tm-hubs-list__link">Программирование</a></li><li class="tm-separated-list__item"><a href="/ru/hub/symfony/" class="tm-hubs-list__link">Symfony</a></li><li class="tm-separated-list__item"><a href="/ru/hub/doctrine/" class="tm-hubs-list__link">Doctrine ORM</a></li></ul></div></div></article></div> <!----></div> <div class="tm-article-sticky-panel"><div class="tm-data-icons tm-article-sticky-panel__icons"><div class="tm-article-rating tm-data-icons__item"><div class="tm-votes-meter tm-article-rating__votes-switcher"><svg height="24" width="24" class="tm-svg-img tm-votes-meter__icon tm-votes-meter__icon tm-votes-meter__icon_appearance-article"><title>Всего голосов 10: ↑10 и ↓0</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-rating"></use></svg> <span title="Всего голосов 10: ↑10 и ↓0" class="tm-votes-meter__value tm-votes-meter__value tm-votes-meter__value_positive tm-votes-meter__value_appearance-article tm-votes-meter__value_rating">+10</span></div> <DIV class="v-portal" style="display:none;"></DIV></div> <!----> <!----> <button title="Добавить в закладки" type="button" class="bookmarks-button tm-data-icons__item"><span class="tm-svg-icon__wrapper bookmarks-button__icon"><svg height="24" width="24" class="tm-svg-img tm-svg-icon"><title>Добавить в закладки</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-favorite"></use></svg></span> <span title="Количество пользователей, добавивших публикацию в закладки" class="bookmarks-button__counter">
    9
  </span></button> <div title="Читать комментарии" class="tm-article-comments-counter-link tm-data-icons__item"><a href="/ru/post/715942/comments/" class="tm-article-comments-counter-link__link"><svg height="24" width="24" class="tm-svg-img tm-article-comments-counter-link__icon"><title>Комментарии</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-comments"></use></svg> <span class="tm-article-comments-counter-link__value">
      9
    </span></a> <!----></div> <div title="Поделиться" class="tm-sharing tm-data-icons__item"><button type="button" class="tm-sharing__button"><svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="tm-sharing__icon"><path fill="currentColor" d="M13.8 13.8V18l7.2-6.6L13.8 5v3.9C5 8.9 3 18.6 3 18.6c2.5-4.4 6-4.8 10.8-4.8z"></path></svg></button> <DIV class="v-portal" style="display:none;"></DIV></div> <DIV class="v-portal" style="display:none;"></DIV></div> </div></div> <DIV class="v-portal" style="display:none;"></DIV> <div class="tm-article-presenter__footer"><div class="tm-article-blocks"><!----> <div></div> <section class="tm-block tm-block tm-block_spacing-bottom"><!----> <div class="tm-block__body tm-block__body tm-block__body_variant-balanced"><div class="tm-article-author"> <div class="tm-user-card tm-article-author__user-card tm-user-card tm-user-card_variant-article"><div class="tm-user-card__info-container"><div class="tm-user-card__header"><div class="tm-user-card__header-data"><a href="/ru/users/franzose/" class="tm-user-card__userpic tm-user-card__userpic_size-40"><div class="tm-entity-image"><img alt="" src="//habrastorage.org/getpro/habr/avatars/298/253/1e7/2982531e7c120975340bacdb184a9599.jpg" class="tm-entity-image__pic"></div></a> <div class="tm-user-card__meta"><div title=" 85 голосов " class="tm-counter-container tm-karma tm-karma"><div class="tm-counter-container__header"><div class="tm-karma__votes tm-karma__votes_positive">
      45
    </div></div> <div class="tm-counter-container__footer"><div class="tm-karma__text">
      Карма
    </div> <DIV class="v-portal" style="display:none;"></DIV></div></div> <div title="Рейтинг пользователя" class="tm-counter-container"><div class="tm-counter-container__header"> <div class="tm-votes-lever tm-votes-lever tm-votes-lever_appearance-rating"><!----> <div class="tm-votes-lever__score tm-votes-lever__score tm-votes-lever__score_appearance-rating"><span class="tm-votes-lever__score-counter tm-votes-lever__score-counter tm-votes-lever__score-counter_rating">
        10.1
      </span></div> <!----></div></div> <div class="tm-counter-container__footer"><span class="tm-rating__text tm-rating__text">
      Рейтинг
    </span></div></div></div></div></div> <div class="tm-user-card__info tm-user-card__info tm-user-card__info_variant-article"><div class="tm-user-card__title tm-user-card__title tm-user-card__title_variant-article"><span class="tm-user-card__name tm-user-card__name tm-user-card__name_variant-article">Ян Иванов</span> <a href="/ru/users/franzose/" class="tm-user-card__nickname tm-user-card__nickname tm-user-card__nickname_variant-article">
          @franzose
        </a> <!----></div> <p class="tm-user-card__short-info tm-user-card__short-info tm-user-card__short-info_variant-article">Веб-разработчик</p></div></div> <div class="tm-user-card__buttons tm-user-card__buttons tm-user-card__buttons_variant-article"><!----> <!----> <!----> <!----> <!----></div></div> <!----></div> <DIV class="v-portal" style="display:none;"></DIV></div> <!----></section> <div class="tm-adfox-banner__container tm-page-article__banner"><!----> <div id="adfox_164725660339535756" class="tm-adfox-banner tm-adfox-banner tm-adfox-banner_variant-leaderboard"></div></div> <div class="tm-article-blocks__comments"><div class="tm-article-page-comments"><div class="tm-article-comments-counter-link tm-article-comments-counter-button"><a href="/ru/post/715942/comments/" class="tm-article-comments-counter-link__link tm-article-comments-counter-link__link_button-style"><svg height="24" width="24" class="tm-svg-img tm-article-comments-counter-link__icon tm-article-comments-counter-link__icon_contrasted"><title>Комментарии</title> <use xlink:href="/img/megazord-v28.2b11c25e..svg#counter-comments"></use></svg> <span class="tm-article-comments-counter-link__value tm-article-comments-counter-link__value_contrasted">
       Комментарии 9 
    </span></a> <!----></div></div></div>  <section class="tm-block tm-block tm-block_spacing-bottom"><header class="tm-block__header tm-block__header tm-block__header_variant-borderless"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title tm-block__title_variant-large">Публикации</h2> </div> <!----></header> <div class="tm-block__body tm-block__body tm-block__body_variant-condensed-slim"><div class="tm-tabs tm-tabs"><div><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link tm-tabs__tab-link_active tm-tabs__tab-link_slim">
        Лучшие за сутки
      </button></span><span class="tm-tabs__tab-item"><button class="tm-tabs__tab-link tm-tabs__tab-link tm-tabs__tab-link_slim">
        Похожие
      </button></span></div> <!----></div> <div class="similar-and-daily__tab-view"><div><!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <div class="tm-placeholder-article-cards"><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div><div class="tm-placeholder-article-card"><div class="tm-placeholder__user"><div class="tm-placeholder__user-pic loads"></div> <div class="tm-placeholder__user-date loads"></div></div> <div class="tm-placeholder-article-card__title"><div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div> <div class="tm-placeholder__line tm-placeholder-article-card__title-line loads"></div></div> <div class="tm-placeholder-article-card__icons tm-placeholder__counters"><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div><div class="tm-placeholder-data-icon"><div class="tm-placeholder__icon tm-placeholder__icon_large loads"></div> <div class="tm-placeholder__line tm-placeholder__line_icon-text"></div></div></div></div></div> <!----> <!----> <!----> <!----></div> <!----></div></div> <!----></section> <div><div><!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <div class="tm-placeholder-promo"><div class="tm-placeholder-promo__header"><div class="tm-placeholder__line tm-placeholder__line_promo-title"></div></div> <div class="tm-placeholder-promo__body"><div class="tm-placeholder-promo__posts"><div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div> <div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div> <div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div> <div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div> <div class="tm-placeholder-promo__post"><div class="tm-placeholder-promo__image"></div> <div class="tm-placeholder__line tm-placeholder__line_post-title"></div></div></div> <div class="tm-placeholder-promo__dots"><div class="tm-placeholder-promo__dot"></div> <div class="tm-placeholder-promo__dot"></div> <div class="tm-placeholder-promo__dot"></div></div></div></div> <!----> <!----> <!----> <!----> <!----></div></div> <div><!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <div class="tm-placeholder-inset tm-placeholder-courses"><div class="tm-placeholder-inset__header"><div class="tm-placeholder__line tm-placeholder__line_inset-header loads"></div></div> <div class="tm-placeholder-inset__body"><ul class="tm-placeholder-list"><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div> <div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div> <div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div> <div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div> <div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li><li class="tm-placeholder-list__item tm-placeholder-list__item_inset"><div class="tm-placeholder-list__title-container"><div class="tm-placeholder__company-avatar"></div> <div class="tm-placeholder__line tm-placeholder__line_item-title loads"></div></div> <div class="tm-project-block-items__properties"><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span><span class="tm-project-block-items__property-item"><span class="tm-placeholder__line loads" style="width: 100px;"></span></span></div></li></ul></div> <div class="tm-placeholder-inset__footer"><div class="tm-placeholder__line tm-placeholder__line_inset-footer loads"></div></div></div> <!----> <!----> <!----> <!----> <!----> <!----> <!----></div> <!----> </div></div></div></div></div> <div class="tm-page__sidebar"><div class="tm-layout-sidebar"><div class="tm-layout-sidebar__ads tm-layout-sidebar__ads_initial"><div class="tm-adfox-banner__container tm-layout-sidebar__banner tm-layout-sidebar__banner_top"><!----> <div id="adfox_164725680533065327" class="tm-adfox-banner tm-adfox-banner tm-adfox-banner_variant-half-page"></div></div></div> <div class="tm-sexy-sidebar tm-sexy-sidebar_initial" style="margin-top:0px;"><!----> <section data-navigatable="" tabindex="0" data-async-called="true" class="tm-block tm-stories-block tm-block tm-block_spacing-around"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Истории</h2> </div> <!----></header> <div class="tm-block__body tm-block__body tm-block__body_variant-equal-small"><div class="tm-stories-empty"><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div><div class="tm-stories-card-empty"><div class="tm-stories-card-empty__image"></div> <div class="tm-stories-card-empty__title"><div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div> <div class="tm-stories-card-empty__title-block"></div></div></div></div> <!----></div> <!----></section> <section data-async-called="true" class="tm-block tm-block tm-block_spacing-around"><header class="tm-block__header tm-block__header"><div class="tm-block__header-container"><h2 class="tm-block__title tm-block__title">Работа</h2> </div> <!----></header> <div class="tm-block__body tm-block__body"><div class="tm-vacancies-block__item"><a href="https://career.habr.com/vacancies/php_programmist" target="_blank" class="tm-vacancies-block__vacancy-title">
        PHP программист
      </a> <div class="tm-vacancies-block__vacancies-count">
        157
    вакансий
      </div></div><div class="tm-vacancies-block__item"><a href="https://career.habr.com/vacancies/programmist_laravel" target="_blank" class="tm-vacancies-block__vacancy-title">
        Разработчик Laravel
      </a> <div class="tm-vacancies-block__vacancies-count">
        65
    вакансий
      </div></div></div> <footer class="tm-block__footer"><a href="https://career.habr.com/catalog" class="tm-block-extralink">
      Все вакансии
    </a></footer></section> <div class="tm-adfox-banner__container tm-layout-sidebar__banner tm-layout-sidebar__banner_bottom"><!----> <div id="adfox_164725691003361602" class="tm-adfox-banner tm-adfox-banner tm-adfox-banner_variant-medium-rectangle"></div></div></div></div></div></div></div></div></main> <!----></div> <div class="tm-footer-menu"><div class="tm-page-width"><div class="tm-footer-menu__container"><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Ваш аккаунт
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr/?back=/ru/post/715942/&amp;hl=ru" rel="nofollow" target="_self">
                Войти
              </a></li><li class="tm-footer-menu__list-item"><a href="/kek/v1/auth/habrahabr-register/?back=/ru/post/715942/&amp;hl=ru" rel="nofollow" target="_self">
                Регистрация
              </a></li></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Разделы
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/ru/" class="footer-menu__item-link router-link-active">
                Публикации
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/news/" class="footer-menu__item-link">
                Новости
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/hubs/" class="footer-menu__item-link">
                Хабы
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/companies/" class="footer-menu__item-link">
                Компании
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/users/" class="footer-menu__item-link">
                Авторы
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/sandbox/" class="footer-menu__item-link">
                Песочница
              </a></li></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Информация
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="/ru/docs/help/" class="footer-menu__item-link">
                Устройство сайта
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/docs/authors/codex/" class="footer-menu__item-link">
                Для авторов
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/docs/companies/corpblogs/" class="footer-menu__item-link">
                Для компаний
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/docs/docs/transparency/" class="footer-menu__item-link">
                Документы
              </a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/agreement" target="_blank">
                Соглашение
              </a></li><li class="tm-footer-menu__list-item"><a href="https://account.habr.com/info/confidential/" target="_blank">
                Конфиденциальность
              </a></li></ul></div></div><div class="tm-footer-menu__block"><p class="tm-footer-menu__block-title">
          Услуги
        </p> <div class="tm-footer-menu__block-content"><ul class="tm-footer-menu__list"><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/corporate-blogs/" target="_blank">
                Корпоративный блог
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/advertising/" target="_blank">
                Медийная реклама
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/native-special/" target="_blank">
                Нативные проекты
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/education-programs/" target="_blank">
                Образовательные программы
              </a></li><li class="tm-footer-menu__list-item"><a href="https://company.habr.com/ru/hello-startup/" target="_blank">
                Стартапам
              </a></li><li class="tm-footer-menu__list-item"><a href="/ru/megaprojects/" class="footer-menu__item-link">
                Мегапроекты
              </a></li></ul></div></div></div></div></div> <div class="tm-footer"><div class="tm-page-width"><div class="tm-footer__container"><!----> <div class="tm-footer__social"><a href="https://www.facebook.com/habrahabr.ru" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Facebook</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-facebook"></use></svg></a><a href="https://twitter.com/habr_com" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Twitter</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-twitter"></use></svg></a><a href="https://vk.com/habr" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>VK</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-vkontakte"></use></svg></a><a href="https://telegram.me/habr_com" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Telegram</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-telegram"></use></svg></a><a href="https://www.youtube.com/channel/UCd_sTwKqVrweTt4oAKY5y4w" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Youtube</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-youtube"></use></svg></a><a href="https://zen.yandex.ru/habr" rel="nofollow noopener noreferrer" target="_blank" class="tm-svg-icon__wrapper tm-social-icons__icon"><svg height="16" width="16" class="tm-svg-img tm-svg-icon"><title>Яндекс Дзен</title> <use xlink:href="/img/social-icons-sprite.svg#social-logo-zen"></use></svg></a></div> <DIV class="v-portal" style="display:none;"></DIV> <button class="tm-footer__link"><!---->
        Настройка языка
      </button> <a href="/ru/feedback/" class="tm-footer__link">
        Техническая поддержка
      </a> <a href="/berserk-mode-nope" class="tm-footer__link">
        Вернуться на старую версию
      </a> <div class="tm-footer-copyright"><span class="tm-copyright"><span class="tm-copyright__years">© 2006–2023, </span> <span class="tm-copyright__name"><a href="https://company.habr.com/" rel="noopener" target="_blank" class="tm-copyright__link">Habr</a></span></span></div></div></div></div> <!----> <!----></div> <div class="vue-portal-target"></div></div>
<script>window.__INITIAL_STATE__={"adblock":{"hasAcceptableAdsFilter":false,"hasAdblock":false},"articlesList":{"articlesList":{"715942":{"id":"715942","timePublished":"2023-02-09T15:43:57+00:00","isCorporative":false,"lang":"ru","titleHtml":"Оптимизация OneToMany коллекций Doctrine","leadData":{"textHtml":"\u003Cp\u003EВ этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в контексте PHP и Doctrine ORM. Полный пример решения вы можете посмотреть в специальном \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Ffranzose\u002Fdoctrine-collections-fix-example\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003Eрепозитории\u003C\u002Fu\u003E\u003C\u002Fa\u003E. Статья основана на решении проблемы из обсуждения \u003Ca href=\"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F13623285\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003Eна StackOverflow\u003C\u002Fu\u003E\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","imageUrl":null,"buttonTextHtml":"Поехали!","image":null},"editorVersion":"2.0","postType":"article","postLabels":[],"author":{"id":"66595","alias":"franzose","fullname":"Ян Иванов","avatarUrl":"\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Favatars\u002F298\u002F253\u002F1e7\u002F2982531e7c120975340bacdb184a9599.jpg","speciality":"Веб-разработчик","scoreStats":{"score":45,"votesCount":85},"rating":10.1,"relatedData":null,"contacts":[],"authorContacts":[],"paymentDetails":{"paymentYandexMoney":null,"paymentPayPalMe":null,"paymentWebmoney":null}},"statistics":{"commentsCount":9,"favoritesCount":9,"readingCount":1994,"score":10,"votesCount":10,"votesCountPlus":10,"votesCountMinus":0},"hubs":[{"id":"260","alias":"php","type":"collective","title":"PHP","titleHtml":"PHP","isProfiled":true,"relatedData":null},{"id":"359","alias":"programming","type":"collective","title":"Программирование","titleHtml":"Программирование","isProfiled":true,"relatedData":null},{"id":"477","alias":"symfony","type":"collective","title":"Symfony","titleHtml":"Symfony","isProfiled":true,"relatedData":null},{"id":"9699","alias":"doctrine","type":"collective","title":"Doctrine ORM","titleHtml":"Doctrine ORM","isProfiled":true,"relatedData":null}],"flows":[{"id":"1","alias":"develop","title":"Разработка","titleHtml":"Разработка"}],"relatedData":null,"textHtml":"\u003Cdiv xmlns=\"http:\u002F\u002Fwww.w3.org\u002F1999\u002Fxhtml\"\u003E\u003Cp\u003EВ этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в контексте PHP и Doctrine ORM. Полный пример решения вы можете посмотреть в специальном \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Ffranzose\u002Fdoctrine-collections-fix-example\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003Eрепозитории\u003C\u002Fu\u003E\u003C\u002Fa\u003E. Статья основана на решении проблемы из обсуждения на \u003Ca href=\"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F13623285\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003EStackOverflow\u003C\u002Fu\u003E\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\u003Cp\u003EМногие из нас сталкивались с необходимостью манипуляции иерархическими структурами данных. Например, категориями товаров. Существуют \u003Ca href=\"https:\u002F\u002Fwww.slideshare.net\u002Fbillkarwin\u002Fmodels-for-hierarchical-data\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003Eразличные способы\u003C\u002Fu\u003E\u003C\u002Fa\u003E хранения подобных структур в БД, оптимизированные под те или иные варианты использования. На проекте, где работал я, использовался комбинированный способ: \u003Ca href=\"https:\u002F\u002Fwww.programiz.com\u002Fdsa\u002Fgraph-adjacency-list\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003Eadjacency list\u003C\u002Fu\u003E\u003C\u002Fa\u003E + \u003Ca href=\"https:\u002F\u002Fdzone.com\u002Farticles\u002Fmaterialized-paths-tree-structures-relational-database\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003Ematerialized path\u003C\u002Fu\u003E\u003C\u002Fa\u003E. Поэтому решение проблемы в данной статье рассчитано именно на использование adjacency list для связей между сущностями.\u003C\u002Fp\u003E\u003Ch2\u003EБаза данных\u003C\u002Fh2\u003E\u003Cp\u003EДля решения нашей задачи подойдет любая база данных, поддерживаемая Doctrine DBAL \u002F ORM. Мы воспользуемся PostgreSQL. Пусть категории хранятся следующим образом:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003Ecreate sequence public.category_id_seq\n    increment by 1;\n\ncreate table if not exists public.category\n(\n    id         bigint default nextval('category_id_seq'::regclass) not null primary key,\n    parent_id  bigint constraint fk_category_id references public.category,\n    uid        text not null,\n    name       text not null,\n    created_at timestamp(0) with time zone not null,\n    updated_at timestamp(0) with time zone not null\n);\n\ncreate unique index uniq_category_uid\n    on public.category (uid);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EДревовидная структура категорий реализуется с помощью ссылки таблицы \u003Ccode\u003Ecategory\u003C\u002Fcode\u003E самой на себя по внешнему ключу \u003Ccode\u003Eparent_id\u003C\u002Fcode\u003E. Вместе с этим у нас есть возможность определить полный путь к категории с помощью уникального поля \u003Ccode\u003Euid\u003C\u002Fcode\u003E, в котором уровни вложенности будут отделяться нижним подчеркиванием. То есть, \u003Ccode\u003Efoo_bar\u003C\u002Fcode\u003E – это категория второго уровня.\u003C\u002Fp\u003E\u003Ch2\u003EСущность\u003C\u002Fh2\u003E\u003Cp\u003EТеперь напишем минимально необходимый код сущности:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E&lt;?php\ndeclare(strict_types=1);\n\nnamespace Hierarchy;\n\nuse DateTimeImmutable;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\ORM\\Mapping\\Column;\nuse Doctrine\\ORM\\Mapping\\Entity;\nuse Doctrine\\ORM\\Mapping\\GeneratedValue;\nuse Doctrine\\ORM\\Mapping\\Id;\nuse Doctrine\\ORM\\Mapping\\JoinColumn;\nuse Doctrine\\ORM\\Mapping\\ManyToOne;\nuse Doctrine\\ORM\\Mapping\\OneToMany;\nuse Doctrine\\ORM\\Mapping\\Table;\n\n#[Entity, Table('category')]\nclass Category\n{\n    #[Column(name: 'parent_id', type: 'bigint', nullable: true)]\n    private ?int $parentId;\n    \n    #[Column(name: 'uid', type: 'string', nullable: false)]\n    private string $uid;\n\n    #[OneToMany(mappedBy: 'parent', targetEntity: self::class)]\n    private Collection $children;\n\n    #[Column(name: 'created_at', type: 'datetimetz_immutable', nullable: false)]\n    private DateTimeImmutable $createdAt;\n\n    #[Column(name: 'updated_at', type: 'datetimetz_immutable', nullable: false)]\n    private DateTimeImmutable $updatedAt;\n\n    public function __construct(\n        #[Id]\n        #[Column(name: 'id', type: 'bigint', nullable: false)]\n        #[GeneratedValue(strategy: 'NONE')]\n        private int $id,\n        string $uid,\n        #[Column(name: 'name', type: 'string', nullable: false)]\n        private string $name,\n        #[ManyToOne(targetEntity: self::class, inversedBy: 'children')]\n        #[JoinColumn(name: 'parent_id', referencedColumnName: 'id')]\n        private ?self $parent = null\n    ) {\n        $this-\u003EparentId = $this-\u003Eparent?-\u003Eid;\n        $this-\u003Euid = $this-\u003Eparent === null ? $uid : sprintf('%s_%s', $this-\u003Eparent-\u003Euid, $uid);\n        $this-\u003EcreatedAt = new DateTimeImmutable();\n        $this-\u003EupdatedAt = new DateTimeImmutable();\n        $this-\u003Echildren = new ArrayCollection();\n    }\n\n    public function id(): int\n    {\n        return $this-\u003Eid;\n    }\n\n    public function uid(): string\n    {\n        return $this-\u003Euid;\n    }\n\n    public function name(): string\n    {\n        return $this-\u003Ename;\n    }\n\n    public function parent(): ?self\n    {\n        return $this-\u003Eparent;\n    }\n\n    public function parentId(): ?int\n    {\n        return $this-\u003EparentId;\n    }\n    \n    public function children(): Collection\n    {\n        return new ArrayCollection($this-\u003Echildren-\u003EtoArray());\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EОбычно связь \u003Ccode\u003EManyToOne\u003C\u002Fcode\u003E определяют одним полем. Например, \u003Ccode\u003Eparent\u003C\u002Fcode\u003E из нашего примера. По умолчанию, при первом обращении к такому полю Doctrine сделает дополнительный запрос в БД, чтобы загрузить связанную сущность в память. Если же указана жадная загрузка \u003Ccode\u003Efetch: EAGER\u003C\u002Fcode\u003E, то связанная сущность будет подгружена вместе с основной сущностью. В нашем случае это привело бы к каскадной подгрузке поддерева, поскольку сущность Category ссылается сама на себя. С моей точки зрения, данный побочный эффект является крайне нежелательным из-за расхода большого количества оперативной памяти на данные, которые могут даже не понадобиться.\u003C\u002Fp\u003E\u003Cp\u003EПоэтому, когда нам необходим только идентификатор связанной сущности (в данном случае – родительской категории), а не вся сущность целиком, мы будем использовать отдельное поле \u003Ccode\u003EparentId\u003C\u002Fcode\u003E. Установив значение этого поля в конструкторе, в дальнейшем мы всегда будем иметь актуальное значение идентификатора. Затем, при многократном использовании этого поля, дополнительных запросов в БД инициировано не будет. Данный подход нам пригодится далее при разработке оптимизированной подгрузки коллекции сущностей.\u003C\u002Fp\u003E\u003Ch2\u003EРепозиторий\u003C\u002Fh2\u003E\u003Cp\u003EДля начала определим интерфейс репозитория категорий. Этот интерфейс мы будем использовать при подмене реализации загрузки коллекции сущностей при тестировании.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E&lt;?php\ndeclare(strict_types=1);\n\nnamespace Hierarchy;\n\ninterface CategoryRepositoryInterface\n{\n    \u002F**\n     * Возвращает новый идентификатор категории.\n     *\n     * Стратегия формирования идентификатора зависит от конкретной реализации.\n     *\u002F\n    public function nextCategoryId(): int;\n\n    \u002F**\n     * Возвращает потомки всех уровней для категории с указанным UID.\n     *\n     * @return Category[]\n     *\u002F\n    public function findDescendantsByUid(string $uid): array;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EЭтих двух методов нам будет достаточно для тестирования. Стандартная реализация интерфейса может выглядеть следующим образом:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E&lt;?php\ndeclare(strict_types=1);\n\nnamespace Hierarchy;\n\nuse Doctrine\\ORM\\EntityManagerInterface;\n\nfinal readonly class DefaultCategoryRepository implements CategoryRepositoryInterface\n{\n    public function __construct(private EntityManagerInterface $em)\n    {\n    }\n\n    public function nextCategoryId(): int\n    {\n        return (int) $this-\u003Eem\n            -\u003EgetConnection()\n            -\u003EexecuteQuery(\"select nextval('category_id_seq')\")\n            -\u003EfetchOne();\n    }\n\n    \u002F**\n     * @return Category[]\n     *\u002F\n    public function findDescendantsByUid(string $uid): array\n    {\n        return $this-\u003Eem\n            -\u003EcreateQueryBuilder()\n            -\u003Eselect('c')\n            -\u003Efrom(Category::class, 'c')\n            -\u003Ewhere('c.uid LIKE :uid')\n            -\u003EsetParameter('uid', sprintf('%s_%%', $uid))\n            -\u003EorderBy('c.uid')\n            -\u003EgetQuery()\n            -\u003EgetResult();\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EКратко о реализации. Метод \u003Ccode\u003EnextCategoryId\u003C\u002Fcode\u003E возвращает следующее значение последовательности PostgreSQL, которую мы определили в самом начале. Этим методом мы будем пользоваться для передачи идентификатора в конструктор сущностей Category и их сохранении в базу данных. Метод \u003Ccode\u003EfindDescendantsByUid\u003C\u002Fcode\u003E возвращает массив потомков всех уровней для категории с указанным UID.\u003C\u002Fp\u003E\u003Ch2\u003EТестирование\u003C\u002Fh2\u003E\u003Cp\u003EЧтобы проверить количество запросов в БД до и после “фикса”, воспользуемся библиотекой PHPUnit со следующей конфигурацией \u003Ccode\u003Ephpunit.xml\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"xml\"\u003E&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?\u003E\n\n&lt;!-- https:\u002F\u002Fphpunit.readthedocs.io\u002Fen\u002Flatest\u002Fconfiguration.html --\u003E\n&lt;phpunit xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:noNamespaceSchemaLocation=\"vendor\u002Fphpunit\u002Fphpunit\u002Fphpunit.xsd\"\n         colors=\"true\"\n         bootstrap=\"vendor\u002Fautoload.php\"\n\u003E\n    &lt;php\u003E\n        &lt;ini name=\"display_errors\" value=\"1\" \u002F\u003E\n        &lt;ini name=\"error_reporting\" value=\"-1\" \u002F\u003E\n        &lt;server name=\"DB_HOST\" value=\"postgres\" \u002F\u003E\n        &lt;server name=\"DB_PORT\" value=\"5432\" \u002F\u003E\n        &lt;server name=\"DB_USER\" value=\"user\" \u002F\u003E\n        &lt;server name=\"DB_PASSWORD\" value=\"user\" \u002F\u003E\n        &lt;server name=\"DB_NAME\" value=\"hierarchy_article_test\" \u002F\u003E\n        &lt;server name=\"DB_DRIVER\" value=\"pdo_pgsql\" \u002F\u003E\n        &lt;server name=\"DOCTRINE_SRC_DIR\" value=\".\u002Fsrc\" \u002F\u003E\n        &lt;server name=\"DOCTRINE_PROXY_DIR\" value=\".\u002Fproxy\" \u002F\u003E\n        &lt;server name=\"DOCTRINE_PROXY_NAMESPACE\" value=\"HierarchyProxy\\\\\" \u002F\u003E\n    &lt;\u002Fphp\u003E\n\n    &lt;testsuites\u003E\n        &lt;testsuite name=\"Project Test Suite\"\u003E\n            &lt;directory\u003Etests&lt;\u002Fdirectory\u003E\n        &lt;\u002Ftestsuite\u003E\n    &lt;\u002Ftestsuites\u003E\n&lt;\u002Fphpunit\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EИтак, приступим к классу тестов и создадим метод \u003Ccode\u003EtestBehavior\u003C\u002Fcode\u003E, в котором позже будет описана логика тестирования.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E&lt;?php\ndeclare(strict_types=1);\n\nuse PHPUnit\\Framework\\TestCase;\n\nfinal class CategoryRepositoryTest extends TestCase\n{\n    public function testBehavior(): void\n    {\n        \u002F\u002F здесь будет написан тест\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EА пока займемся подготовкой тестовых данных. Сначала напишем метод, который будет наполнять базу данных небольшим деревом категорий.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003Eprivate static function createCategories(\n    EntityManagerInterface $em,\n    CategoryRepositoryInterface $repository\n): void {\n    $parent = new Category($repository-\u003EnextCategoryId(), 'foo', 'Foo');\n    $child = new Category($repository-\u003EnextCategoryId(), 'bar', 'Bar', $parent);\n    $grandChild = new Category($repository-\u003EnextCategoryId(), 'qux', 'Qux', $child);\n    $grandGrandChild = new Category($repository-\u003EnextCategoryId(), 'doo', 'Doo', $grandChild);\n\n    foreach ([$parent, $child, $grandChild, $grandGrandChild] as $entity) {\n        $em-\u003Epersist($entity);\n    }\n\n    $em-\u003Eflush();\n    $em-\u003Eclear();\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТеперь нам нужны менеджер сущностей и репозиторий категорий. Опишем подключение к БД и непосредственно создание менеджера.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003Eprivate static function createEntityManager(Connection $connection): EntityManagerInterface\n{\n    $config = new ORMConfiguration();\n    $config-\u003EsetMetadataDriverImpl(new AttributeDriver([$_SERVER['DOCTRINE_SRC_DIR']]));\n    $config-\u003EsetProxyDir($_SERVER['DOCTRINE_PROXY_DIR']);\n    $config-\u003EsetProxyNamespace($_SERVER['DOCTRINE_PROXY_NAMESPACE']);\n\n    return new EntityManager($connection, $config);\n}\n\nprivate static function createConnection(LoggerInterface $logger): Connection\n{\n    $params = [\n        'host' =\u003E $_SERVER['DB_HOST'],\n        'port' =\u003E $_SERVER['DB_PORT'],\n        'user' =\u003E $_SERVER['DB_USER'],\n        'password' =\u003E $_SERVER['DB_PASSWORD'],\n        'dbname' =\u003E $_SERVER['DB_NAME'],\n        'driver' =\u003E $_SERVER['DB_DRIVER']\n    ];\n\n    $config = new DBALConfiguration();\n    $config-\u003EsetMiddlewares([\n        new \\Doctrine\\DBAL\\Logging\\Middleware($logger)\n    ]);\n\n    return DriverManager::getConnection($params, $config);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EСуть теста заключается в проверке SQL-запросов, которые инициирует Doctrine, поэтому нам нужен логгер. Надеюсь, что вы вовремя обновляете зависимости на проекте, но всё же обращу ваше внимание на конфигурацию подключения к БД. В Doctrine DBAL 3.2.0 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fdoctrine\u002Fdbal\u002Fpull\u002F4967\" rel=\"noopener noreferrer nofollow\"\u003E\u003Cu\u003Eпоявился\u003C\u002Fu\u003E\u003C\u002Fa\u003E механизм middleware, а метод \u003Ccode\u003EConfiguration::setSQLLogger()\u003C\u002Fcode\u003E и класс \u003Ccode\u003EDoctrine\\DBAL\\Logging\\DebugStack\u003C\u002Fcode\u003E были объявлены устаревшими и начали генерировать предупреждения. То есть, раньше можно было написать примерно следующее:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E$debugStack = new DebugStack();\n$em-\u003EgetConnection()-\u003EgetConfiguration()-\u003EsetSQLLogger($debugStack);\n\u002F\u002F далее инициируем и исследуем запросы\n$debugStack-\u003Equeries;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EОднако теперь следует использовать middleware, как в примере выше. Причем аналога \u003Ccode\u003EDebugStack\u003C\u002Fcode\u003E в новых версиях Doctrine DBAL нет, поэтому его придется реализовывать самостоятельно. Но это не так уж и сложно. Вот пример такого логгера:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E&lt;?php\ndeclare(strict_types=1);\n\nnamespace Hierarchy\\Tests;\n\nuse Psr\\Log\\AbstractLogger;\nuse Stringable;\n\nfinal class TestDatabaseLogger extends AbstractLogger\n{\n    private array $queries = [];\n    \n    public function log($level, Stringable|string $message, array $context = []): void\n    {\n        if (array_key_exists('sql', $context)) {\n            $this-\u003Equeries[] = $context;\n        }\n    }\n\n    \u002F**\n     * @return string[]\n     *\u002F\n    public function selectQueries(): array\n    {\n        $filter = static fn (string $query) =\u003E str_starts_with($query, 'SELECT');\n        \n        return array_values(array_filter(array_column($this-\u003Equeries, 'sql'), $filter));\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТеперь соберем всё воедино в методе \u003Ccode\u003EsetUpTestData()\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E#[ArrayShape([TestDatabaseLogger::class, CategoryRepositoryInterface::class])]\nprivate static function setUpTestData(string $repositoryClassName): array\n{\n    $logger = new TestDatabaseLogger();\n\n    $connection = self::createConnection($logger);\n    $connection-\u003EexecuteStatement('delete from category');\n\n    $em = self::createEntityManager($connection);\n    $repository = new $repositoryClassName($em);\n\n    self::createCategories($em, $repository);\n\n    return [$logger, $repository];\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EБлагодаря аргументу \u003Ccode\u003E$repositoryClassName\u003C\u002Fcode\u003E нам не придётся “хардкодить” конкретный класс репозитория, и мы сможем протестировать обе реализации выборки, “обычную” и оптимизированную, не меняя при ни тест, ни подготовительный код. Теперь напишем сам тест:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E\u002F**\n * @dataProvider behaviourDataProvider\n *\u002F\npublic function testBehavior(string $repositoryClassName, array $expectedQueries): void\n{\n    [$logger, $repository] = self::setUpTestData($repositoryClassName);\n\n    \u002F\u002F foo_bar, foo_bar_qux, foo_bar_qux_doo\n    $descendants = $repository-\u003EfindDescendantsByUid('foo');\n    \n    self::assertEquals('foo_bar_qux_doo', $descendants[0]-\u003Echildren()-\u003Efirst()-\u003Echildren()-\u003Efirst()-\u003Euid());\n    self::assertEquals($expectedQueries, $logger-\u003EselectQueries());\n}\n\npublic function behaviourDataProvider(): array\n{\n    return [\n        [\n            DefaultCategoryRepository::class,\n            [\n                'SELECT c0_.parent_id AS parent_id_0, c0_.uid AS uid_1, c0_.created_at AS created_at_2, c0_.updated_at AS updated_at_3, c0_.id AS id_4, c0_.name AS name_5, c0_.parent_id AS parent_id_6 FROM category c0_ WHERE c0_.uid LIKE ? ORDER BY c0_.uid ASC',\n                'SELECT t0.parent_id AS parent_id_1, t0.uid AS uid_2, t0.created_at AS created_at_3, t0.updated_at AS updated_at_4, t0.id AS id_5, t0.name AS name_6, t0.parent_id AS parent_id_7 FROM category t0 WHERE t0.parent_id = ?',\n                'SELECT t0.parent_id AS parent_id_1, t0.uid AS uid_2, t0.created_at AS created_at_3, t0.updated_at AS updated_at_4, t0.id AS id_5, t0.name AS name_6, t0.parent_id AS parent_id_7 FROM category t0 WHERE t0.parent_id = ?'\n            ]\n        ]\n    ];\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EИ убедимся, что он проходит успешно:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"bash\"\u003EPHPUnit 9.5.27 by Sebastian Bergmann and contributors.\n\n.                    1 \u002F 1 (100%)\n\nTime: 00:00.093, Memory: 10.00 MB\n\nOK (1 test, 2 assertions)\nProcess finished with exit code 0\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EСуть теста заключается в следующем:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EЗагрузить всех потомков сущности \u003Ccode\u003Efoo\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EВзять сущность \u003Ccode\u003Efoo_bar\u003C\u002Fcode\u003E, несколько раз переместиться вглубь дерева с помощью вызова метода \u003Ccode\u003Echildren()\u003C\u002Fcode\u003E и убедиться, что каждый такой вызов инициирует дополнительный SQL-запрос в БД\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003EПолучается, что Doctrine загружает OneToMany-коллекцию из БД всякий раз, когда происходит обращение к соответствующему полю. Даже не смотря на то, что эти сущности уже были загружены в память. Как раз это нам и предстоит исправить.\u003C\u002Fp\u003E\u003Ch2\u003EОптимизация\u003C\u002Fh2\u003E\u003Cp\u003EСоздадим новый репозиторий \u003Ccode\u003EImprovedCategoryRepository\u003C\u002Fcode\u003E со следующим содержимым:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E&lt;?php\ndeclare(strict_types=1);\n\nnamespace Hierarchy;\n\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Doctrine\\ORM\\PersistentCollection;\n\nfinal readonly class ImprovedCategoryRepository implements CategoryRepositoryInterface\n{\n    public function __construct(private EntityManagerInterface $em)\n    {\n    }\n\n    public function nextCategoryId(): int\n    {\n        return (int) $this-\u003Eem\n            -\u003EgetConnection()\n            -\u003EexecuteQuery(\"select nextval('category_id_seq')\")\n            -\u003EfetchOne();\n    }\n\n    \u002F**\n     * @return Category[]\n     *\u002F\n    public function findDescendantsByUid(string $uid): array\n    {\n        $result = $this-\u003Eem\n            -\u003EcreateQueryBuilder()\n            -\u003Eselect('c')\n            -\u003Efrom(Category::class, 'c')\n            -\u003EindexBy('c', 'c.id')\n            -\u003Ewhere('c.uid LIKE :uid')\n            -\u003EsetParameter('uid', sprintf('%s_%%', $uid))\n            -\u003EorderBy('c.uid')\n            -\u003EgetQuery()\n            -\u003EgetResult();\n\n        return $this-\u003EsetUpCategoryRelations($result);\n    }\n\n    \u002F**\n     * @param Category[] $categories\n     * @return Category[]\n     *\u002F\n    private function setUpCategoryRelations(array $categories): array\n    {\n        $metadata = $this-\u003Eem-\u003EgetClassMetadata(Category::class);\n        $idField = $metadata-\u003EreflFields['id'];\n        $parentField = $metadata-\u003EreflFields['parent'];\n        $parentIdField = $metadata-\u003EreflFields['parentId'];\n        $childrenField = $metadata-\u003EreflFields['children'];\n\n        foreach ($categories as $category) {\n            \u002F** @var PersistentCollection $children *\u002F\n            $children = $childrenField-\u003EgetValue($category);\n            $children-\u003EsetInitialized(true);\n\n            $parent = $categories[$parentIdField-\u003EgetValue($category)] ?? null;\n\n            if ($parent === null) {\n                continue;\n            }\n\n            \u002F** @var PersistentCollection $children *\u002F\n            $children = $childrenField-\u003EgetValue($parent);\n\n            if (!$children-\u003Econtains($category)) {\n                $parentField-\u003EsetValue($category, $parent);\n                $parentIdField-\u003EsetValue($category, $idField-\u003EgetValue($parent));\n                $children-\u003Eadd($category);\n            }\n        }\n\n        return array_values($categories);\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EDQL выборки отличается лишь тем, что мы указываем идентификатор сущности в качестве индекса массива. Это понадобится далее при обходе категорий:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E$this-\u003Eem\n     -\u003EcreateQueryBuilder()\n     -\u003Eselect('c')\n     -\u003Efrom(Category::class, 'c')\n     -\u003EindexBy('c', 'c.id')\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВсё самое интересное происходит далее в методе \u003Ccode\u003EsetUpCategoryRelations()\u003C\u002Fcode\u003E. Для начала через метаданные мы выбираем поля сущности Category, с которыми будем работать.\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E$metadata = $this-\u003Eem-\u003EgetClassMetadata(Category::class);\n$idField = $metadata-\u003EreflFields['id'];\n$parentField = $metadata-\u003EreflFields['parent'];\n$parentIdField = $metadata-\u003EreflFields['parentId'];\n$childrenField = $metadata-\u003EreflFields['children'];\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТеперь мы “обманем” Doctrine и укажем, что все коллекции дочерних сущностей уже были проинициализированы:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E\u002F** @var PersistentCollection $children *\u002F\n$children = $childrenField-\u003EgetValue($category);\n$children-\u003EsetInitialized(true);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТогда при последующих обращениях к свойству \u003Ccode\u003ECategory::$children\u003C\u002Fcode\u003E Doctrine не будет инициировать дополнительный запрос в БД! Но это только часть нашего “фикса”, ведь коллекции остаются пустыми. Поэтому соберем их вручную:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003E$parent = $categories[$parentIdField-\u003EgetValue($category)] ?? null;\n\nif ($parent === null) {\n    continue;\n}\n\n\u002F** @var PersistentCollection $children *\u002F\n$children = $childrenField-\u003EgetValue($parent);\n\nif (!$children-\u003Econtains($category)) {\n    $parentField-\u003EsetValue($category, $parent);\n    $parentIdField-\u003EsetValue($category, $idField-\u003EgetValue($parent));\n    $children-\u003Eadd($category);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EИз-за рефлексии код выглядит страшновато, но при этом имеет преимущества:\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E\u003Cp\u003EТехнические манипуляции над сущностями отделены от бизнес-логики\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Cp\u003EКакое бы то ни было изменение методов сущности не затронет репозиторий и не сломает его\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003EПо факту код выше делает то же самое, как если бы в сущности мы написали такой метод и затем использовали его в репозитории:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003Epublic function addChild(self $child): void\n{\n    if (!$this-\u003Echildren-\u003Econtains($child)) {\n        $child-\u003Eparent = $this;\n        $child-\u003EparentId = $this-\u003Eid;\n        $this-\u003Echildren-\u003Eadd($child);\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2\u003EПовторное тестирование\u003C\u002Fh2\u003E\u003Cp\u003EДля тестирования оптимизированной реализации \u003Ccode\u003ECategoryRepositoryInterface\u003C\u002Fcode\u003E нам достаточно добавить второй набор данных в data provider  \u003Ccode\u003ECategoryRepositoryTest::behaviorDataProvider()\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"php\"\u003Epublic function behaviourDataProvider(): array\n{\n    return [\n        [\n            DefaultCategoryRepository::class,\n            [\n                'SELECT c0_.parent_id AS parent_id_0, c0_.uid AS uid_1, c0_.created_at AS created_at_2, c0_.updated_at AS updated_at_3, c0_.id AS id_4, c0_.name AS name_5, c0_.parent_id AS parent_id_6 FROM category c0_ WHERE c0_.uid LIKE ? ORDER BY c0_.uid ASC',\n                'SELECT t0.parent_id AS parent_id_1, t0.uid AS uid_2, t0.created_at AS created_at_3, t0.updated_at AS updated_at_4, t0.id AS id_5, t0.name AS name_6, t0.parent_id AS parent_id_7 FROM category t0 WHERE t0.parent_id = ?',\n                'SELECT t0.parent_id AS parent_id_1, t0.uid AS uid_2, t0.created_at AS created_at_3, t0.updated_at AS updated_at_4, t0.id AS id_5, t0.name AS name_6, t0.parent_id AS parent_id_7 FROM category t0 WHERE t0.parent_id = ?'\n            ]\n        ],\n        [\n            ImprovedCategoryRepository::class,\n            [\n                'SELECT c0_.parent_id AS parent_id_0, c0_.uid AS uid_1, c0_.created_at AS created_at_2, c0_.updated_at AS updated_at_3, c0_.id AS id_4, c0_.name AS name_5, c0_.parent_id AS parent_id_6 FROM category c0_ WHERE c0_.uid LIKE ? ORDER BY c0_.uid ASC',\n            ]\n        ]\n    ];\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EТаким образом, мы ожидаем, что после загрузки коллекции сущностей с помощью метода \u003Ccode\u003EImprovedCategoryRepository::findDescendantsByUid()\u003C\u002Fcode\u003E дальнейшие манипуляции над вложенными коллекциями не будут инициировать дополнительные запросы в БД. Убедимся в этом, повторно запустив тест:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"bash\"\u003EPHPUnit 9.5.27 by Sebastian Bergmann and contributors.\n\n..                   2 \u002F 2 (100%)\n\nTime: 00:00.100, Memory: 10.00 MB\n\nOK (2 tests, 4 assertions)\nProcess finished with exit code 0\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EВуаля, наш “фикс” сработал! На больших деревьях эффект будет куда заметнее, т.к. вместо сотен или тысяч запросов будет выполняться лишь один: проверено на практике. Надеюсь, что статья была полезной для вас.\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E","tags":[{"titleHtml":"php"},{"titleHtml":"symfony"},{"titleHtml":"doctrine orm"},{"titleHtml":"postgresql"},{"titleHtml":"базы данных"}],"metadata":{"stylesUrls":[],"scriptUrls":[],"shareImageUrl":"https:\u002F\u002Fhabr.com\u002Fshare\u002Fpublication\u002F715942\u002Fd13a9347eb01af109585e91e8ab639ad\u002F","shareImageWidth":1200,"shareImageHeight":630,"vkShareImageUrl":"https:\u002F\u002Fhabr.com\u002Fshare\u002Fpublication\u002F715942\u002Fd13a9347eb01af109585e91e8ab639ad\u002F?format=vk","schemaJsonLd":"{\"@context\":\"http:\\\u002F\\\u002Fschema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fpost\\\u002F715942\\\u002F\"},\"headline\":\"Оптимизация OneToMany коллекций Doctrine\",\"datePublished\":\"2023-02-09T18:43:57+03:00\",\"dateModified\":\"2023-02-12T11:39:21+03:00\",\"author\":{\"@type\":\"Person\",\"name\":\"Ян Иванов\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Habr\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https:\\\u002F\\\u002Fhabrastorage.org\\\u002Fwebt\\\u002Fa_\\\u002Flk\\\u002F9m\\\u002Fa_lk9mjkccjox-zccjrpfolmkmq.png\"}},\"description\":\"В этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в к...\",\"url\":\"https:\\\u002F\\\u002Fhabr.com\\\u002Fru\\\u002Fpost\\\u002F715942\\\u002F#post-content-body\",\"about\":[\"h_php\",\"h_programming\",\"h_symfony\",\"h_doctrine\",\"f_develop\"],\"image\":[\"https:\\\u002F\\\u002Fhabr.com\\\u002Fshare\\\u002Fpublication\\\u002F715942\\\u002Fd13a9347eb01af109585e91e8ab639ad\\\u002F\"]}","metaDescription":"В этой статье будет показан пример того, как уменьшить количество запросов к базе данных до одного при работе с коллекциями сущностей иерархической структуры в контексте PHP и Doctrine ORM. Полный...","mainImageUrl":null,"amp":true,"customTrackerLinks":[]},"polls":[],"commentsEnabled":true,"rulesRemindEnabled":false,"votesEnabled":true,"status":"published","plannedPublishTime":null,"checked":null,"hasPinnedComments":false,"format":null,"readingTime":13,"complexity":null,"isEditorial":false}},"articlesIds":{},"isLoading":false,"pagesCount":{},"route":{},"reasonsList":null,"view":"cards","lastVisitedRoute":{},"ssrCommentsArticleIds":[""],"karma":{"userReasonsList":null}},"authorContribution":{"authors":{}},"betaTest":{"currentAnnouncement":null,"announcements":{},"announcementCards":null,"announcementComments":{},"announcementCommentThreads":{},"announcementCommentingStatuses":{},"archivedList":[]},"authorStatistics":{"articleRefs":{},"articleIds":{},"pagesCount":{},"route":{},"viewsCount":[],"maxStatsCount":{}},"career":{"seoLandings":[{"title":"PHP программист","vacanciesCount":157,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fphp_programmist","itemHubs":["laravel","symfony","yii","php"]},{"title":"Разработчик Laravel","vacanciesCount":65,"itemUrl":"https:\u002F\u002Fcareer.habr.com\u002Fvacancies\u002Fprogrammist_laravel","itemHubs":["laravel","php"]}],"hubs":"php,programming,symfony,doctrine"},"comments":{"articleComments":{},"articlePinnedComments":{},"searchCommentsResults":null,"pagesCount":null,"commentAccess":{},"scrollParents":{},"pageArticleComments":{"lastViewedComment":0,"postId":null,"lastCommentTimestamp":"","moderated":[],"moderatedIds":[],"commentRoute":""}},"companies":{"companyRefs":{},"companyIds":{},"companyTopIds":{},"pagesCount":{},"companyProfiles":{},"companiesCategories":[],"companiesCategoriesTotalCount":0,"companiesWidgets":{},"companiesWorkers":{},"companiesFans":{},"route":{},"isLoading":false,"companyWorkersLoading":false,"companyFansLoading":false,"vacancies":{},"companiesGalleries":{},"companiesBanners":{},"companiesLandingVacancies":{},"companiesTechnologies":{},"workplaceInfo":null},"companyAdmin":{"companyInfo":null,"companyInfoLoading":false,"faqArticles":null,"brandingPreviewImageUrl":null,"jivoStatus":0,"adminNotifications":null},"companiesContribution":{"hubs":{},"flows":{},"companyRefs":{}},"companyHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"conversation":{"messages":[],"respondent":null,"isLoadMore":false},"conversations":{"conversations":[],"unreadCount":0,"pagesCount":0},"desktopState":{"desktopFl":null,"desktopHl":null,"isChecked":false,"isLoginDemanded":false},"docs":{"menu":{},"articles":{},"mainMenu":[],"loading":{"main":false,"dropdown":false,"article":false}},"feature":{"isProbablyVisible":true},"flows":{"updates":{"countNewPostsBySubscription":null,"countNewPostsAll":28,"countNewNewsAll":12},"flows":[{"alias":"develop","id":"1","route":{"name":"FLOW_PAGE","params":{"flowName":"develop"}}},{"alias":"admin","id":"6","route":{"name":"FLOW_PAGE","params":{"flowName":"admin"}}},{"alias":"design","id":"2","route":{"name":"FLOW_PAGE","params":{"flowName":"design"}}},{"alias":"management","id":"3","route":{"name":"FLOW_PAGE","params":{"flowName":"management"}}},{"alias":"marketing","id":"4","route":{"name":"FLOW_PAGE","params":{"flowName":"marketing"}}},{"alias":"popsci","id":"7","route":{"name":"FLOW_PAGE","params":{"flowName":"popsci"}}}]},"global":{"isPwa":false,"device":"desktop","isHabrCom":true},"hubs":{"hubRefs":{},"hubIds":{},"pagesCount":{},"isLoading":false,"route":{}},"hubsBlock":{"hubRefs":{},"hubIds":{}},"i18n":{"fl":"ru","hl":"ru"},"info":{"infoPage":{},"isLoading":true},"location":{"urlStruct":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":{},"pathname":null,"path":null,"href":""}},"me":{"user":null,"uuid":null,"ppgDemanded":false,"karmaResetInfo":{"canReincarnate":null,"wasReincarnated":null,"currentScore":null},"notes":null},"modal":{"modals":[]},"mostReadingList":{"mostReadingListIds":[],"mostReadingListRefs":null,"promoPost":null},"ppa":{"articles":{},"card":null,"transactions":null,"totalTransactions":null,"isAccessible":null},"projectsBlocks":{"activeBlocks":{"courses":"project-block-article"}},"promoData":{"isLoading":false,"hasLoaded":false,"featurer":null,"megaposts":null,"promoLinks":null,"promoPosts":null},"pullRefresh":{"shouldRefresh":false},"sandbox":{"articleIds":[],"articleRefs":{},"pagesCount":null,"route":{},"lastVisitedRoute":{},"isLoading":false},"search":{"searchQueryError":null},"settingsOther":{"inputs":{"uiLang":{"errors":[],"ref":null,"value":""},"articlesLangEnglish":{"errors":[],"ref":null,"value":false},"articlesLangRussian":{"errors":[],"ref":null,"value":false},"agreement":{"errors":[],"ref":null,"value":false},"email":{"errors":[],"ref":null,"value":true},"digest":{"errors":[],"ref":null,"value":true}}},"similarList":{"similarListIds":[],"similarListRefs":null},"ssr":{"error":null,"isDataLoaded":false,"isDataLoading":false,"isHydrationFailed":false,"isServer":false},"stories":{"stories":[{"id":"story-256","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F9f9\u002Fe16\u002Faa3\u002F9f9e16aa3959d9417693b87b33b5960a.png","title":"Хабр Карьера","link":"https:\u002F\u002Fu.habr.com\u002FfWIWD"},"title":"Карьерная неделя с победителями рейтинга","lang":"ru","startTime":"2023-02-22T13:00:00+03:00","finishTime":"2023-02-27T12:43:00+03:00","slides":[{"id":"story-256_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F412\u002F447\u002Fe40\u002F412447e40a7f9d7d0bc3def931a8f531.png","button":null},{"id":"story-256_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe5a\u002F945\u002F506\u002Fe5a94550609aa2470112448d69291f01.png","button":null},{"id":"story-256_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F68f\u002Ffd1\u002Fe00\u002F68ffd1e00991476e865643cfb0c1b7a3.png","button":{"title":"Перейти в канал","link":"https:\u002F\u002Fu.habr.com\u002FmZQU8","colorType":"light"}}]},{"id":"story-254","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7ca\u002Fd19\u002F564\u002F7cad19564e3da01131c205970297efed.png","title":"Хабр Новости","link":"https:\u002F\u002Fu.habr.com\u002FW9ecI"},"title":"Снимок мощной солнечной вспышки","lang":"ru","startTime":"2023-02-22T12:10:00+03:00","finishTime":"2023-03-05T11:56:00+03:00","slides":[{"id":"story-254_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F1e5\u002F39c\u002Fd83\u002F1e539cd8310dbe3ebcb14cffc293a7ff.png","button":null},{"id":"story-254_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0cd\u002F0a3\u002F1a9\u002F0cd0a31a9f2ad25a56848a8c6fa7860e.png","button":null},{"id":"story-254_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd15\u002Faec\u002Fadd\u002Fd15aecadde84e134c75b642bdadad5f7.png","button":{"title":"Подробности","link":"https:\u002F\u002Fu.habr.com\u002FW9ecI","colorType":"light"}}]},{"id":"story-252","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff19\u002F48d\u002Fd15\u002Ff1948dd155701f88d36e11387c1660ef.png","title":"Geek Travel","link":"https:\u002F\u002Fu.habr.com\u002F9TZjL"},"title":"Где искать северное сияние в России","lang":"ru","startTime":"2023-02-21T11:35:00+03:00","finishTime":"2023-03-05T11:22:00+03:00","slides":[{"id":"story-252_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F506\u002F188\u002F83b\u002F50618883bc97ce517531018d3290d961.jpg","button":{"title":"К посту","link":"https:\u002F\u002Fu.habr.com\u002F9TZjL","colorType":"light"}},{"id":"story-252_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe42\u002Fa71\u002Fe8e\u002Fe42a71e8eb5583814647f5ad55f9e0ae.jpg","button":null},{"id":"story-252_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F685\u002Fdbe\u002F4ff\u002F685dbe4ffe3940eca28ede7406898846.jpg","button":null},{"id":"story-252_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F383\u002F63b\u002F1f4\u002F38363b1f459d5daace0e4502f0780737.jpg","button":null},{"id":"story-252_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F32b\u002F665\u002F0c4\u002F32b6650c448d698b9ca4dba128afb56e.jpg","button":null},{"id":"story-252_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F95e\u002F0b2\u002F5be\u002F95e0b25be55ae919dbebbac6142e670d.jpg","button":null},{"id":"story-252_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F616\u002F1d4\u002Ff84\u002F6161d4f849be8d4e4aeee88ea2e3d572.jpg","button":null}]},{"id":"story-250","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F09c\u002F0f6\u002F15d\u002F09c0f615db74086a1611243d250411eb.png","title":"Хабр","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fhabr\u002Fblog\u002F"},"title":"Лучшее из блогов компаний за неделю","lang":"ru","startTime":"2023-02-21T10:20:00+03:00","finishTime":"2023-02-28T15:20:00+03:00","slides":[{"id":"story-250_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff8d\u002F1f4\u002Fcc3\u002Ff8d1f4cc328fb5308a64c97976ad821a.jpg","button":null},{"id":"story-250_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcf9\u002Fe08\u002F87e\u002Fcf9e0887eda5882faea090e93cfeb057.jpg","button":{"title":"Смотреть списки","link":"https:\u002F\u002Fu.habr.com\u002Fss-tt","colorType":"light"}},{"id":"story-250_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8db\u002Faae\u002F8d4\u002F8dbaae8d401dc775493cce70e4096a89.jpg","button":{"title":"Как это было","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fyandex\u002Fblog\u002F716524\u002F","colorType":"light"}},{"id":"story-250_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffe5\u002Fb10\u002F831\u002Ffe5b10831e5a6fbe445a2bd3de96c808.jpg","button":{"title":"Подробнее","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fdododev\u002Fblog\u002F714512\u002F","colorType":"light"}},{"id":"story-250_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F0c7\u002Fd91\u002Ff10\u002F0c7d91f101a28ab92af503dd97e9a511.jpg","button":{"title":"Читать советы","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fproductivity_inside\u002Fblog\u002F717108\u002F","colorType":"light"}},{"id":"story-250_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F4ea\u002F32a\u002F3dc\u002F4ea32a3dc44b42aaf23c65c43dde62b1.jpg","button":{"title":"Окунуться в прошлое","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Ftimeweb\u002Fblog\u002F714894\u002F","colorType":"light"}},{"id":"story-250_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6f9\u002F3f3\u002F016\u002F6f93f30163ac0c7307ac32d74832049a.jpg","button":{"title":"Размышления","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fcloud4y\u002Fblog\u002F715668\u002F","colorType":"light"}},{"id":"story-250_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F3e1\u002F35b\u002F17d\u002F3e135b17de83de5d5a9fd901e439221a.jpg","button":{"title":"Узнать больше","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fruvds\u002Fblog\u002F714946\u002F","colorType":"light"}}]},{"id":"story-246","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fc41\u002F8cc\u002Fca9\u002Fc418ccca924faf05c11530c5071e627b.png","title":"Хабр Карьера","link":"https:\u002F\u002Fu.habr.com\u002Fitzp2022-new"},"title":"Зарплаты в IT во второй половине 2022","lang":"ru","startTime":"2023-02-20T11:05:00+03:00","finishTime":"2023-03-05T23:59:00+03:00","slides":[{"id":"story-246_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbe2\u002F07d\u002F19f\u002Fbe207d19f3cdc4b89e3618025c071ea0.png","button":null},{"id":"story-246_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fcda\u002F93e\u002Fed7\u002Fcda93eed762714814ddfc51c4712f4ed.png","button":null},{"id":"story-246_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb8a\u002Fde4\u002F87f\u002Fb8ade487fa6556af459e032adebf852d.png","button":null},{"id":"story-246_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F8f6\u002Fb32\u002F844\u002F8f6b328448ed968a18a60a0cd745bd34.png","button":{"title":"Подробнее","link":"https:\u002F\u002Fu.habr.com\u002Fitzp2022-new","colorType":"dark"}}]},{"id":"story-222","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F312\u002Fabe\u002Fd4c\u002F312abed4c2617f05f485c19ae101de7e.png","title":"Хабр","link":"https:\u002F\u002Fhabr.com\u002Fru\u002Fcompany\u002Fhabr\u002Fblog\u002F"},"title":"Любовь, Хабр и роботы","lang":"ru","startTime":"2023-02-14T09:00:14+03:00","finishTime":"2023-02-26T23:59:00+03:00","slides":[{"id":"story-222_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd35\u002Fce5\u002F716\u002Fd35ce5716f14544be26d53e05dc155ab.jpg","button":null},{"id":"story-222_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F191\u002Fb9c\u002F449\u002F191b9c449738d2cb2333ffa8daa1bd39.jpg","button":{"title":"Читать переводы","link":"https:\u002F\u002Fu.habr.com\u002Fval1","colorType":"light"}},{"id":"story-222_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7c6\u002F61d\u002F6d9\u002F7c661d6d915ca10f037ccc7307fa36ec.jpg","button":{"title":"Что получилось?","link":"https:\u002F\u002Fu.habr.com\u002Fval2","colorType":"light"}},{"id":"story-222_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F02c\u002F20a\u002Fa28\u002F02c20aa28f1e1cb7d70943bd96eb5ac7.jpg","button":{"title":"Созерцать","link":"https:\u002F\u002Fu.habr.com\u002Fval3","colorType":"light"}},{"id":"story-222_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fe94\u002F9d6\u002F03e\u002Fe949d603e63cf1c98dcc4597ba41abfa.jpg","button":{"title":"На свидание","link":"https:\u002F\u002Fu.habr.com\u002Fval4","colorType":"light"}},{"id":"story-222_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F7b0\u002F3b3\u002Fed9\u002F7b03b3ed931ce73a0cda771b5e39c813.jpg","button":{"title":"Нашёл?","link":"https:\u002F\u002Fu.habr.com\u002Fval5","colorType":"light"}},{"id":"story-222_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F594\u002Fff6\u002Fbad\u002F594ff6badc0503fa3ca0dffafc31d3a3.jpg","button":{"title":"И сколько же?","link":"https:\u002F\u002Fu.habr.com\u002Fval6","colorType":"light"}},{"id":"story-222_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F452\u002Ff87\u002F9aa\u002F452f879aaf0db9530f35204663ec00e6.jpg","button":{"title":"Глянуть код","link":"https:\u002F\u002Fu.habr.com\u002Fval7","colorType":"light"}}]},{"id":"story-186","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fb6b\u002F720\u002F180\u002Fb6b72018041811571246ddf5ef07bd33.png","title":"Сезоны Хабра","link":"https:\u002F\u002Fu.habr.com\u002Fstory_season-kuber"},"title":"Столкнуться с кубом","lang":"ru","startTime":"2023-02-01T11:30:00+03:00","finishTime":"2023-02-28T23:59:00+03:00","slides":[{"id":"story-186_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F2b0\u002F5e8\u002Fffb\u002F2b05e8ffb30634f0f7f5c9602d8e43e6.png","button":null},{"id":"story-186_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdfb\u002F838\u002F9c1\u002Fdfb8389c197e915942f9144978b91ce4.png","button":null},{"id":"story-186_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F634\u002Fc42\u002Fdfd\u002F634c42dfddb260cdf37f9c9b9d3f34ea.png","button":null},{"id":"story-186_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F401\u002F9f5\u002F59e\u002F4019f559e6c090ded0b46d6deeb4883c.png","button":null},{"id":"story-186_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F82a\u002F9cd\u002Fa48\u002F82a9cda4870156765b749271aca48241.png","button":{"title":"Смотреть участников","link":"https:\u002F\u002Fu.habr.com\u002Fstory_season-kuber_members","colorType":"light"}}]},{"id":"story-152","author":{"logo":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fa49\u002F0d3\u002F609\u002Fa490d3609f29b6dfc53a7b88ab47ca64.png","title":"Хабр","link":"https:\u002F\u002Fu.habr.com\u002Fstory_HiM-anketa"},"title":"Сеньоры — очень странные люди","lang":"ru","startTime":"2023-01-23T11:00:00+03:00","finishTime":"2023-03-01T23:59:00+03:00","slides":[{"id":"story-152_1","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbbb\u002F901\u002F063\u002Fbbb9010630ae483ed1f41ec4e2572c13.png","button":null},{"id":"story-152_2","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F4f8\u002F66c\u002F14f\u002F4f866c14f0ca8999334438d7f17c0e3a.png","button":null},{"id":"story-152_3","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F6b9\u002Fa07\u002Fa61\u002F6b9a07a612df213ac3a1c179301828df.png","button":null},{"id":"story-152_4","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ff6b\u002Fadb\u002Fb99\u002Ff6badbb9969d7e34ef4f7492767c6a77.png","button":null},{"id":"story-152_5","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fd9c\u002F9ac\u002F878\u002Fd9c9ac878bec5b494699e0080dd2e813.png","button":null},{"id":"story-152_6","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fdb1\u002Faf9\u002Fc3b\u002Fdb1af9c3bb557f6cee698cf67610f977.png","button":null},{"id":"story-152_7","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002F5cf\u002Fbed\u002F65b\u002F5cfbed65bd20b7051b1aac2b9d6e807e.png","button":null},{"id":"story-152_8","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Ffa8\u002F251\u002F4a9\u002Ffa82514a9471cd455339e97178d8c021.png","button":null},{"id":"story-152_9","image":"https:\u002F\u002Fhabrastorage.org\u002Fgetpro\u002Fhabr\u002Fupload_files\u002Fbd5\u002F901\u002Fe95\u002Fbd5901e952d9cf638355a3cc8b0c0911.png","button":{"title":"Хочу помочь джуну","link":"https:\u002F\u002Fu.habr.com\u002Fstory_HiM-anketa","colorType":"light"}}]}]},"technotext":{"years":[],"technotextDocForNominees":null,"technotextDocForWinners":null,"technotextInfo":{},"technotextInfoLoading":false,"technotextWinners":{},"technotextWinnersLoading":false},"userHubsContribution":{"contributionRefs":{"hubRefs":{},"hubIds":{}}},"userInvites":{"availableInvites":0,"usedInvitesIds":[],"usedInvitesRefs":{},"usedInvitesPagesCount":0,"unusedInvitesIds":[],"unusedInvitesRefs":{},"unusedInvitesPagesCount":0},"userVotes":{"karmaVotesList":[],"karmaVotesPagesCount":null,"karmaVotesListLoading":false,"commentsVotesList":[],"commentsVotesPagesCount":null,"commentsVotesListLoading":false,"postsVotesList":[],"postsVotesPagesCount":null,"postsVotesListLoading":false,"userVotesList":[],"userVotesPagesCount":null,"userVotesListLoading":false},"users":{"authorRefs":{},"authorIds":{},"pagesCount":{},"authorProfiles":{},"userHubs":{},"userInvitations":{},"authorFollowers":{},"authorFollowed":{},"userSpecialization":{},"karmaStats":[],"statistics":null,"isLoading":false,"authorFollowersLoading":false,"authorFollowedLoading":false,"userHubsLoading":false,"userInvitationsLoading":false,"route":{}},"viewport":{"prevScrollY":{},"scrollY":0,"width":0},"tracker":{"items":{},"pagesCache":{},"markedViewedSilently":{},"markedRead":{},"unreadCounters":{"applications":null,"system":null,"mentions":null,"subscribers":null,"posts_and_comments":null},"unviewedCounters":{"applications":null,"system":null,"mentions":null,"subscribers":null,"posts_and_comments":null}}};(function(){var s;(s=document.currentScript||document.scripts[document.scripts.length-1]).parentNode.removeChild(s);}());</script>
<script src="https://assets.habr.com/habr-web/js/chunk-vendors.2287bfbd.js" defer></script><script src="https://assets.habr.com/habr-web/js/7298.c8f1d73c.js" defer></script><script src="https://assets.habr.com/habr-web/js/app.58744b80.js" defer></script>



    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-726094-1"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
    </script>
  
  <script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

    ym(24049213, "init", {
      defer:true,
      trackLinks:true,
      accurateTrackBounce:true,
      webvisor:false,
    });
  </script>
  <noscript>
    <div>
      <img src="https://mc.yandex.ru/watch/24049213" style="position:absolute; left:-9999px;" alt="" />
    </div>
  </noscript>
  
    <script type="text/javascript">
      window.addEventListener('load', function () {
        setTimeout(() => {
          const img = new Image();
          img.src = 'https://vk.com/rtrg?p=VK-RTRG-421343-57vKE';
        }, 0);
      });
    </script>
  
<script src="/js/ads.js" onload="window['zhY4i4nJ9K'] = true"></script>
</body>
</html>
